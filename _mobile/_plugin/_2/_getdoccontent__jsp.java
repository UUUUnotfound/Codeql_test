/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin._2;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.general.*;
import java.util.*;
import weaver.hrm.*;
import weaver.systeminfo.*;
import org.jsoup.*;
import org.jsoup.nodes.*;
import org.jsoup.safety.*;

public class _getdoccontent__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.hrm.resource.ResourceComInfo resourceComInfo;
      resourceComInfo = (weaver.hrm.resource.ResourceComInfo) pageContext.getAttribute("resourceComInfo");
      if (resourceComInfo == null) {
        resourceComInfo = new weaver.hrm.resource.ResourceComInfo();
        pageContext.setAttribute("resourceComInfo", resourceComInfo);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.docs.docs.DocManager docManager;
      docManager = (weaver.docs.docs.DocManager) pageContext.getAttribute("docManager");
      if (docManager == null) {
        docManager = new weaver.docs.docs.DocManager();
        pageContext.setAttribute("docManager", docManager);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.docs.DocDetailLog docDetailLog;
      docDetailLog = (weaver.docs.DocDetailLog) pageContext.getAttribute("docDetailLog");
      if (docDetailLog == null) {
        docDetailLog = new weaver.docs.DocDetailLog();
        pageContext.setAttribute("docDetailLog", docDetailLog);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.splitepage.operate.SpopForDoc spopForDoc;
      spopForDoc = (weaver.splitepage.operate.SpopForDoc) pageContext.getAttribute("spopForDoc");
      if (spopForDoc == null) {
        spopForDoc = new weaver.splitepage.operate.SpopForDoc();
        pageContext.setAttribute("spopForDoc", spopForDoc);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet recordSet;
      recordSet = (weaver.conn.RecordSet) pageContext.getAttribute("recordSet");
      if (recordSet == null) {
        recordSet = new weaver.conn.RecordSet();
        pageContext.setAttribute("recordSet", recordSet);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet rs;
      rs = (weaver.conn.RecordSet) pageContext.getAttribute("rs");
      if (rs == null) {
        rs = new weaver.conn.RecordSet();
        pageContext.setAttribute("rs", rs);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      
request.setCharacterEncoding("UTF-8");
response.setContentType("text/html;charset=UTF-8");

String documentid = Util.null2String((String)request.getParameter("documentid"));
String module = Util.null2String((String)request.getParameter("module"));
String scope = Util.null2String((String)request.getParameter("scope"));
String title = Util.null2String((String)request.getParameter("title"));
String clienttype = Util.null2String((String)request.getParameter("clienttype"));
String clientlevel = Util.null2String((String)request.getParameter("clientlevel"));
//\u6807\u8bb0\u662f\u4ece\u5fae\u641c\u6a21\u5757\u8fdb\u5165start
String fromES=Util.null2String((String)request.getParameter("fromES"));
//\u6807\u8bb0\u662f\u4ece\u5fae\u641c\u6a21\u5757\u8fdb\u5165end
String requestid = Util.null2String((String)request.getParameter("requestid"));
String fromWF = Util.null2String((String)request.getParameter("fromWF"));
int fromRequestid = Util.getIntValue(request.getParameter("fromRequestid"), 0);

User user = HrmUserVarify.getUser (request , response) ;
if(user == null)  return ;

char flag=Util.getSeparator() ;

int userid=user.getUID();
String logintype = user.getLogintype();
String userType = ""+user.getType();
String userdepartment = ""+user.getUserDepartment();
String usersubcomany = ""+user.getUserSubCompany1();
String userSeclevel = user.getSeclevel();
String userSeclevelCheck = userSeclevel;
if("2".equals(logintype)){
	userdepartment="0";
	usersubcomany="0";
	userSeclevel="0";
}

docManager.resetParameter();
docManager.setId(Util.getIntValue(documentid));
docManager.getDocInfoById();

//\u6587\u6863\u4fe1\u606f
int maincategory=docManager.getMaincategory();
int subcategory=docManager.getSubcategory();
int seccategory=docManager.getSeccategory();
String docsubject=docManager.getDocsubject();
String doccontent=docManager.getDoccontent();
String docpublishtype=docManager.getDocpublishtype();
String docstatus=docManager.getDocstatus();
int ishistory = docManager.getIsHistory();
String usertype=docManager.getUsertype();

//\u5b50\u76ee\u5f55\u4fe1\u606f
recordSet.executeProc("Doc_SecCategory_SelectByID",seccategory+"");
recordSet.next();
String readerCanViewHistoryEdition=Util.null2String(recordSet.getString("readerCanViewHistoryEdition"));

String userInfo=logintype+"_"+userid+"_"+userSeclevelCheck+"_"+userType+"_"+userdepartment+"_"+usersubcomany;
List PdocList = spopForDoc.getDocOpratePopedom(""+documentid,userInfo);

//0:\u67e5\u770b  
boolean canReader = false;
//1:\u7f16\u8f91
boolean canEdit = false;
//2:\u5220\u9664
boolean canDel = false;
//3:\u5171\u4eab
boolean canShare = false ;
//4:\u65e5\u5fd7
boolean canViewLog = false;
//5:\u53ef\u4ee5\u56de\u590d
boolean canReplay = false;
//6:\u6253\u5370
boolean canPrint = false;
//7:\u53d1\u5e03
boolean canPublish = false;
//8:\u5931\u6548
boolean canInvalidate = false;
//9:\u5f52\u6863
boolean canArchive = false;
//10:\u4f5c\u5e9f
boolean canCancel = false;
//11:\u91cd\u65b0\u6253\u5f00
boolean canReopen = false;
//\u7b7e\u51fa
boolean canCheckOut = false;
//\u7b7e\u5165
boolean canCheckIn = false;
//\u5f3a\u5236\u7b7e\u5165
boolean canCheckInCompellably =false ;
//\u65b0\u5efa\u5de5\u4f5c\u6d41
boolean cannewworkflow = true;
//TD12005\u4e0d\u53ef\u4e0b\u8f7d
boolean canDownloadFromShare = false;

if (((String)PdocList.get(0)).equals("true")) canReader = true ;
if (((String)PdocList.get(1)).equals("true")) canEdit = true ;
if (((String)PdocList.get(2)).equals("true")) canDel = true ;
if (((String)PdocList.get(3)).equals("true")) canShare = true ;
if (((String)PdocList.get(4)).equals("true")) canViewLog = true ;
if (((String)PdocList.get(5)).equals("true")) canDownloadFromShare = true ;//TD12005

if(canReader && ((!docstatus.equals("7")&&!docstatus.equals("8")) 
                  ||(docstatus.equals("7")&&ishistory==1&&readerCanViewHistoryEdition.equals("1"))
				  )){
    canReader = true;
}else{
    canReader = false;
}

//\u662f\u5426\u53ef\u4ee5\u67e5\u770b\u5386\u53f2\u7248\u672c
//\u5177\u6709\u7f16\u8f91\u6743\u9650\u7684\u7528\u6237\uff0c\u59cb\u7ec8\u53ef\u89c1\u6587\u6863\u7684\u5386\u53f2\u7248\u672c\uff1b
//\u53ef\u4ee5\u8bbe\u7f6e\u5177\u6709\u53ea\u8bfb\u6743\u9650\u7684\u64cd\u4f5c\u4eba\u662f\u5426\u53ef\u89c1\u5386\u53f2\u7248\u672c\uff1b

if(ishistory==1) {
	//if(SecCategoryComInfo.isReaderCanViewHistoryEdition(seccategory)){
	if(readerCanViewHistoryEdition.equals("1")){
    	if(canReader && !canEdit) canReader = true;
	} else {
	    if(canReader && !canEdit) canReader = false;
	}
}	

//\u7f16\u8f91\u6743\u9650\u64cd\u4f5c\u8005\u53ef\u67e5\u770b\u6587\u6863\u72b6\u6001\u4e3a\uff1a\u201c\u5ba1\u6279\u201d\u3001\u201c\u5f52\u6863\u201d\u3001\u201c\u5f85\u53d1\u5e03\u201d\u6216\u5386\u53f2\u6587\u6863
if(canEdit && ((docstatus.equals("3") || docstatus.equals("5") || docstatus.equals("6") || docstatus.equals("7")) || ishistory==1)) {
	//canEdit = false;
    canReader = true;
}

if(!canReader) {
	out.println("no right!");
	return;
}

if(docpublishtype.equals("2")){
	int tmppos = doccontent.indexOf("!@#$%^&*");
	if(tmppos!=-1) doccontent = doccontent.substring(tmppos+8,doccontent.length());
}

doccontent = Util.replace(doccontent, "&amp;", "&", 0);

      out.write(_jsp_string2, 0, _jsp_string2.length);
       if(doccontent!=null&&doccontent.length()>0) { 
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((doccontent ));
      out.write(_jsp_string4, 0, _jsp_string4.length);
       } 
      out.write(_jsp_string5, 0, _jsp_string5.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/2/getDocContent.jsp"), -7967165009148371367L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  private final static char []_jsp_string4;
  private final static char []_jsp_string3;
  private final static char []_jsp_string1;
  private final static char []_jsp_string5;
  static {
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string2 = "\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n	<meta name=\"author\" content=\"Weaver E-Mobile Dev Group\" />\r\n	<meta name=\"description\" content=\"Weaver E-mobile\" />\r\n	<meta name=\"keywords\" content=\"weaver,e-mobile\" />\r\n	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n	<title></title>\r\n	<script type='text/javascript' src='/mobile/plugin/js/jquery/jquery_wev8.js'></script>\r\n	<script type='text/javascript' src='/mobile/plugin/js/jquery/jquery-ui_wev8.js'></script>\r\n	<link rel=\"stylesheet\" href=\"/mobile/plugin/css/cupertino/jquery-ui_wev8.css\" type=\"text/css\">\r\n	<link rel=\"stylesheet\" href=\"/mobile/plugin/css/mobile_wev8.css\" type=\"text/css\">\r\n	<style type=\"text/css\">\r\n	#header {\r\n		width:100%;\r\n		background: -moz-linear-gradient(top, white, #ECECEC);\r\n		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FFFFFF', endColorstr='#ececec');\r\n		background: -webkit-gradient(linear, left top, left bottom, from(#FFFFFF), to(#ECECEC));\r\n		background: -moz-linear-gradient(top, white, #ECECEC);\r\n		border-bottom: #CCC solid 1px;\r\n		filter: alpha(opacity=70);\r\n		-moz-opacity: 0.70;\r\n		opacity: 0.70;\r\n		position:relative;\r\n	}\r\n	#title {\r\n		font-size:16pt;\r\n		font-weight:bold;\r\n		color:#000;\r\n		padding:10px 10px 6px 10px;\r\n		overflow:hidden;\r\n	}\r\n	#subhead {\r\n		padding-left:10px;\r\n		margin-bottom:6px;\r\n		font-size:9pt;\r\n		color:#000;\r\n		overflow:hidden;\r\n	}\r\n	#content {\r\n		font-family: Arial, Verdana, sans-serif;\r\n	}\r\n	</style>\r\n\r\n</head>\r\n<body>\r\n\r\n<div id=\"view_page\" style=\"height:auto;min-height:100%;background-color:#FFFFFF;position:absolute;top:0px;\">\r\n\r\n\r\n	<div id=\"content\" style=\"background-color:#FFFFFF;\">\r\n	\r\n		".toCharArray();
    _jsp_string4 = "\r\n		</div>\r\n		\r\n		".toCharArray();
    _jsp_string3 = "\r\n	\r\n		<div>\r\n		".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string5 = "\r\n		\r\n	</div>\r\n\r\n</div>\r\n</body>\r\n</html>".toCharArray();
  }
}
