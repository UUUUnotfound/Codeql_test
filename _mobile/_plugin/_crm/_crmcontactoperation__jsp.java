/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin._crm;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.List;
import weaver.Constants;
import weaver.general.Util;
import weaver.general.TimeUtil;
import weaver.conn.RecordSet;
import weaver.hrm.User;
import weaver.domain.workplan.WorkPlan;
import weaver.systeminfo.SystemEnv;
import java.text.*;
import java.util.*;
import java.net.URLDecoder;
import net.sf.json.JSONObject;
import net.sf.json.JSONArray;
import weaver.file.FileUpload;

public class _crmcontactoperation__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;

  
  // \u6839\u636e\u65e5\u671f\u53d6\u661f\u671f\uff08TD20444\uff09
  public String getWeekByDate(String date){
  	String week=""; 
  	DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd"); 
  	   Date d=null;
  	  try {
  	   d = format1.parse(date);
  	  } catch (Exception e) {
  	   e.printStackTrace();
  	  }
  	   Calendar   c   =   Calendar.getInstance();   
  	   c.setTime(d);
  	   week = c.getTime().toString().substring(0,3).toLowerCase();
  	   return week;    	
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.hrm.HrmUserVarify hrmUserVarify;
      hrmUserVarify = (weaver.hrm.HrmUserVarify) pageContext.getAttribute("hrmUserVarify");
      if (hrmUserVarify == null) {
        hrmUserVarify = new weaver.hrm.HrmUserVarify();
        pageContext.setAttribute("hrmUserVarify", hrmUserVarify);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.WorkPlan.WorkPlanService workPlanService;
      workPlanService = (weaver.WorkPlan.WorkPlanService) pageContext.getAttribute("workPlanService");
      if (workPlanService == null) {
        workPlanService = new weaver.WorkPlan.WorkPlanService();
        pageContext.setAttribute("workPlanService", workPlanService);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.WorkPlan.WorkPlanShare workPlanShare;
      workPlanShare = (weaver.WorkPlan.WorkPlanShare) pageContext.getAttribute("workPlanShare");
      if (workPlanShare == null) {
        workPlanShare = new weaver.WorkPlan.WorkPlanShare();
        pageContext.setAttribute("workPlanShare", workPlanShare);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.WorkPlan.WorkPlanLogMan workPlanLogMan;
      workPlanLogMan = (weaver.WorkPlan.WorkPlanLogMan) pageContext.getAttribute("workPlanLogMan");
      if (workPlanLogMan == null) {
        workPlanLogMan = new weaver.WorkPlan.WorkPlanLogMan();
        pageContext.setAttribute("workPlanLogMan", workPlanLogMan);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet recordSet;
      recordSet = (weaver.conn.RecordSet) pageContext.getAttribute("recordSet");
      if (recordSet == null) {
        recordSet = new weaver.conn.RecordSet();
        pageContext.setAttribute("recordSet", recordSet);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet recordSet1;
      recordSet1 = (weaver.conn.RecordSet) pageContext.getAttribute("recordSet1");
      if (recordSet1 == null) {
        recordSet1 = new weaver.conn.RecordSet();
        pageContext.setAttribute("recordSet1", recordSet1);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet recordSet2;
      recordSet2 = (weaver.conn.RecordSet) pageContext.getAttribute("recordSet2");
      if (recordSet2 == null) {
        recordSet2 = new weaver.conn.RecordSet();
        pageContext.setAttribute("recordSet2", recordSet2);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet rs;
      rs = (weaver.conn.RecordSet) pageContext.getAttribute("rs");
      if (rs == null) {
        rs = new weaver.conn.RecordSet();
        pageContext.setAttribute("rs", rs);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet rsc;
      rsc = (weaver.conn.RecordSet) pageContext.getAttribute("rsc");
      if (rsc == null) {
        rsc = new weaver.conn.RecordSet();
        pageContext.setAttribute("rsc", rsc);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      
	
	response.setHeader("cache-control", "no-cache");
	response.setHeader("pragma", "no-cache");
	response.setHeader("expires", "Mon 1 Jan 1990 00:00:00 GMT");
	request.setCharacterEncoding("UTF-8");
	FileUpload fu = new FileUpload(request);
	User user = hrmUserVarify.getUser(request, response);	
	if(user == null)  return ;
	String userId = String.valueOf(user.getUID());  //\u5f53\u524d\u7528\u6237Id
	String userType = user.getLogintype();

	String method = fu.getParameter("method");
	 
	String color = "";
    WorkPlan workPlan = new WorkPlan();

    workPlan.setCreaterId(Integer.parseInt(userId));
    workPlan.setCreateType(Integer.parseInt(userType));
    
    char sep = Util.getSeparator();
    
    //\u5224\u65ad\u662f\u5426\u4e3a\u7cfb\u7edf\u7ba1\u7406\u5458sysadmin 
    int isSysadmin=0;
    RecordSet rssysadminmenu=new RecordSet();
    rssysadminmenu.executeSql("select count(*) from hrmresourcemanager where id="+userId);	
    if(rssysadminmenu.next()){
	     isSysadmin=rssysadminmenu.getInt(1);
    }    
	if("addCalendarItem".equals(method))
	{	
		
	    String workPlanType ="0";  //\u65e5\u7a0b\u7c7b\u578bp
	    recordSet.execute("SELECT workPlanTypeID FROM workPlanType where workPlanTypeName='\u7b7e\u5230\u7b7e\u9000'");
	    if(recordSet.next())
	    	workPlanType=recordSet.getString("workPlanTypeID");
	    workPlanType="3";
	    String workPlanName=Util.null2String(URLDecoder.decode(fu.getParameter("planName"),"UTF-8"));  //\u6807\u9898p
	    String urgentLevel=Util.null2String(fu.getParameter("urgentLevel"));//\u7d27\u6025\u7a0b\u5ea6p
	    urgentLevel="".equals(urgentLevel)?"1":urgentLevel;
	    String remindType = Util.null2String(fu.getParameter("remindType"));  //\u63d0\u9192\u7c7b\u578b
	    remindType="".equals(remindType)?"1":remindType;
	    String remindBeforeStart = Util.null2String(fu.getParameter("remindBeforeStart"));  //\u662f\u5426\u5f00\u59cb\u524d\u63d0\u9192p
	    if(!"".equals(workPlanType) && null != workPlanType)
	    {
	        workPlan.setWorkPlanType(Integer.parseInt(workPlanType));  //\u65e5\u7a0b\u7c7b\u578b	
	    }else{
	    	workPlanType="0";
	    	 workPlan.setWorkPlanType(0);
	    }
	    workPlan.setWorkPlanName(workPlanName);
	    workPlan.setUrgentLevel(urgentLevel);  
	    workPlan.setRemindType(remindType);
	    //workPlan.setRemindType(remindBeforeStart);
	    if(!"".equals(remindBeforeStart) && null != remindBeforeStart)
	    {
	        workPlan.setRemindBeforeStart(remindBeforeStart);  //\u662f\u5426\u5f00\u59cb\u524d\u63d0\u9192
	    }
	    else
	    {
	        workPlan.setRemindBeforeStart("0");
	    }
	   
	    String remindBeforeEnd = Util.null2String(fu.getParameter("remindBeforeEnd"));  //\u662f\u5426\u7ed3\u675f\u524d\u63d0\u9192p
	    if(!"".equals(remindBeforeEnd) && null != remindBeforeEnd)
	    {
	        workPlan.setRemindBeforeEnd(remindBeforeEnd);  //\u662f\u5426\u7ed3\u675f\u524d\u63d0\u9192



	    }
	    else
	    {
	        workPlan.setRemindBeforeEnd("0");
	    }
	    
	    if(!"".equals(remindBeforeStart) && null != remindBeforeStart)
	    {
	    	workPlan.setRemindTimesBeforeStart(Util.getIntValue(fu.getParameter("remindDateBeforeStart"),0)*60+Util.getIntValue(Util.null2String(fu.getParameter("remindTimesBeforeStart")),0));  //\u5f00\u59cb\u524d\u63d0\u9192\u65f6\u95f4p
	    }
	    else
	    {
	        workPlan.setRemindTimesBeforeStart(0);
	    }
	    
	     if(!"".equals(remindBeforeEnd) && null != remindBeforeEnd)
	    {
	    	workPlan.setRemindTimesBeforeEnd(Util.getIntValue(fu.getParameter("remindDateBeforeEnd"),0)*60+Util.getIntValue(Util.null2String(fu.getParameter("remindTimesBeforeEnd")),0));  //\u7ed3\u675f\u524d\u63d0\u9192\u65f6\u95f4p
	    }
	    else
	    {
	        workPlan.setRemindTimesBeforeEnd(0);
	    }
	    
	    workPlan.setResourceId(Util.null2String(fu.getParameter("memberIDs")).equals("")?""+user.getUID():Util.null2String(fu.getParameter("memberIDs")));  //\u7cfb\u7edf\u53c2\u4e0e\u4ebap
	    
	    String beginDate = Util.null2String(fu.getParameter("beginDate"));  //\u5f00\u59cb\u65e5\u671fp
	    workPlan.setBeginDate(beginDate);  //\u5f00\u59cb\u65e5\u671f
	    String beginTime = fu.getParameter("beginTime");  //\u5f00\u59cb\u65f6\u95f4p
	    if("00".equals(beginTime) || "".equals(beginTime) || null == beginTime){
	    	//\u8003\u8651\u5230\u65b0\u5efa\u65e5\u7a0b\u7684\u8d77\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u4e0d\u540c
		    String validedatefrom = beginDate.substring(0,4)+"-01-01";
		    String validedateto = beginDate.substring(0,4)+"-12-31";
		    String startSql="select * from HrmSchedule  where validedatefrom <= '"+validedatefrom+"' and validedateto >= '"+validedateto+"' ";
		    String startweek = getWeekByDate(beginDate)+"starttime1";
		    if(isSysadmin>0){//\u82e5\u4e3a\u7cfb\u7edf\u7ba1\u7406\u5458\u5219\u76f4\u63a5\u53d6\u603b\u90e8\u65f6\u95f4
		    	startSql+=" and scheduletype = '3' ";
		    }else{
		    	startSql+=" and relatedid = (select m.subcompanyid1 from hrmresource m where m.id='"+userId+"')";
		    }
	    	rs.execute(startSql);
	    	if(rs.next()){
	              beginTime = rs.getString(startweek);
	              workPlan.setBeginTime(beginTime.equals("")?"00:00":beginTime);  //\u5f00\u59cb\u65f6\u95f4
	    	}else{//\u82e5\u65e0\u8003\u52e4\u65f6\u95f4\u8bb0\u5f55\u53d6 00:00
	    		  workPlan.setBeginTime("00:00");  //\u5f00\u59cb\u65f6\u95f4
	    	}	    	
	    }else{
	    	workPlan.setBeginTime(beginTime);  //\u5f00\u59cb\u65f6\u95f4
	    }
	    
	    String endDate = Util.null2String(fu.getParameter("endDate"));  //\u7ed3\u675f\u65e5\u671fp
	    workPlan.setEndDate(endDate);  //\u7ed3\u675f\u65e5\u671f
	    String endTime = fu.getParameter("endTime");  //\u7ed3\u675f\u65f6\u95f4p
	    if(!"".equals(workPlan.getEndDate()) && null != workPlan.getEndDate() && ("".equals(endTime) || null == endTime || "00".equals(endTime)))
	    {	    	
		    String validedatefrom = endDate.substring(0,4)+"-01-01";
		    String validedateto = endDate.substring(0,4)+"-12-31";
		    String endSql="select * from HrmSchedule  where validedatefrom <= '"+validedatefrom+"' and validedateto >= '"+validedateto+"' ";		    
		    String endweek = getWeekByDate(endDate)+"endtime2";
		    if(isSysadmin>0){//\u82e5\u4e3a\u7cfb\u7edf\u7ba1\u7406\u5458\u5219\u76f4\u63a5\u53d6\u603b\u90e8\u65f6\u95f4
		    	endSql+=" and scheduletype = '3' ";
		    }else{
		    	endSql+=" and relatedid = (select m.subcompanyid1 from hrmresource m where m.id='"+userId+"')";
		    }
		    rsc.execute(endSql);
	    	if(rsc.next()){		    
	                endTime = rsc.getString(endweek);
	                workPlan.setEndTime(endTime.equals("")?"00:00":endTime);  //\u7ed3\u675f\u65f6\u95f4
	    	}else{  //\u82e5\u65e0\u8003\u52e4\u65f6\u95f4\u8bb0\u5f55\u53d6 00:00
	    		    workPlan.setEndTime("00:00");  //\u7ed3\u675f\u65f6\u95f4
	    	}
	    	
	    }
	    else
	    {
	        workPlan.setEndTime(endTime);  //\u7ed3\u675f\u65f6\u95f4
	    }
	    workPlan.setDescription(URLDecoder.decode(Util.null2String(fu.getParameter("description")),"UTF-8"));  //\u5185\u5bb9p
	    workPlan.setCustomer(Util.null2String(fu.getParameter("crmIDs")));  //\u76f8\u5173\u5ba2\u6237p
	    workPlan.setDocument(Util.null2String(fu.getParameter("docIDs")));  //\u76f8\u5173\u6587\u6863p
	    workPlan.setProject(Util.null2String(fu.getParameter("projectIDs")));  //\u76f8\u5173\u9879\u76eep
	    workPlan.setTask(Util.null2String(fu.getParameter("taskIDs")));  //\u76f8\u5173\u9879\u76ee\u4efb\u52a1
	    workPlan.setWorkflow(Util.null2String(fu.getParameter("fuIDs")));  //\u76f8\u5173\u6d41\u7a0bp    
	    
	    if(!"".equals(workPlan.getBeginDate()) && null != workPlan.getBeginDate())
	    {	    	
	    	List beginDateTimeRemindList = Util.processTimeBySecond(workPlan.getBeginDate(), workPlan.getBeginTime(), workPlan.getRemindTimesBeforeStart() * -1 * 60);
	    	workPlan.setRemindDateBeforeStart((String)beginDateTimeRemindList.get(0));  //\u5f00\u59cb\u524d\u63d0\u9192\u65e5\u671f
	    	workPlan.setRemindTimeBeforeStart((String)beginDateTimeRemindList.get(1));  //\u5f00\u59cb\u524d\u63d0\u9192\u65f6\u95f4
	    }
	    if(!"".equals(workPlan.getEndDate()) && null != workPlan.getEndDate())
	    {
	    	List endDateTimeRemindList = Util.processTimeBySecond(workPlan.getEndDate(), workPlan.getEndTime(), workPlan.getRemindTimesBeforeEnd() * -1 * 60);
	    	workPlan.setRemindDateBeforeEnd((String)endDateTimeRemindList.get(0));  //\u7ed3\u675f\u524d\u63d0\u9192\u65e5\u671f
	    	workPlan.setRemindTimeBeforeEnd((String)endDateTimeRemindList.get(1));  //\u7ed3\u675f\u524d\u63d0\u9192\u65f6\u95f4
	    }

		StringBuffer stringBuffer = new StringBuffer();
		stringBuffer.append("SELECT * FROM WorkPlanType WHERE workPlanTypeId = ");
		stringBuffer.append(workPlanType);

	    recordSet.executeSql(stringBuffer.toString());
	    if(recordSet.next())
	    {
	        color = recordSet.getString("workPlanTypeColor");
	    }
	    
	    workPlanService.insertWorkPlan(workPlan);
	    workPlanShare.setDefaultShareDetail(user,String.valueOf(workPlan.getWorkPlanID()),workPlanType);
	    
	    //\u66f4\u65b0\u4f4d\u7f6e
	    String location=Util.null2String(fu.getParameter("location"));
	    String sql="update workplan set location='"+location+"' where id="+workPlan.getWorkPlanID();
	    recordSet.execute(sql);
	    
    	//\u63d2\u5165\u65e5\u5fd7
    	String logParams[] = new String[]
		{ String.valueOf(workPlan.getWorkPlanID()), workPlanLogMan.TP_CREATE, userId, fu.getRemoteAddr() };
		workPlanLogMan.writeViewLog(logParams);
    	
       	out.clearBuffer();
    	SimpleDateFormat format1=new SimpleDateFormat("MM/dd/yyyy HH:mm");
    	SimpleDateFormat format2=new SimpleDateFormat("yyyy-MM-dd HH:mm");
    	Date startDateTime=new Date();
    	Date endDateTime=new Date();
    	Map result=new HashMap();
   		List data=new ArrayList();
   		boolean isAllDay=false;
    	result.put("IsSuccess","true");
    	
    	data.add(""+workPlan.getWorkPlanID());
    	data.add(workPlan.getWorkPlanName());
    	if(!"".equals(workPlan.getBeginDate())){
    		startDateTime=format2.parse(workPlan.getBeginDate()+" "+workPlan.getBeginTime());
    		data.add(workPlan.getBeginDate()+" "+workPlan.getBeginTime());
    	}else{
    		data.add("");
    	}
    	if(!"".equals(workPlan.getEndDate())){
    		endDateTime=format2.parse(workPlan.getEndDate()+" "+workPlan.getEndTime());
    		data.add(workPlan.getEndDate()+" "+workPlan.getEndTime());
    		if(endDateTime.getDate()-startDateTime.getDate()>=1){
    			isAllDay=true;
    		}
    	}else{
    		data.add("");
    	}
    	data.add("0");
    	if(isAllDay){
    		data.add("1");//\u662f\u4e0d\u662f\u5168\u5929
    	}else{
    		data.add("0");
    	}
    	data.add("0");//,0,1,0,-1,1,
    	data.add(color);//\u989c\u8272
    	data.add("1");//editable
    	data.add("1");
    	data.add("1");
    	result.put("Data",data);
    	//["92","\u738b\u4f01\u9e45\u5168\u6587","12/29/2011 01:30","12/29/2011 05:00","0","0","0","1","1","Belion",""]
    	JSONObject jsonObj=JSONObject.fromObject(result);
    	out.print(jsonObj.toString());
    	out.flush();
	}


      out.write(_jsp_string2, 0, _jsp_string2.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/crm/CrmContactOperation.jsp"), 6586975020988937218L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  static {
    _jsp_string0 = "\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string2 = "\r\n\r\n".toCharArray();
  }
}
