/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin._1;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.mobile.webservices.workflow.WorkflowRequestTableRecord;
import weaver.mobile.webservices.workflow.WorkflowRequestTableField;
import weaver.workflow.datainput.DynamicDataInput;
import weaver.general.*;
import java.util.*;

public class _caljsdetail__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
    String temStr = "";
    for(int m=0; m<rowCalAry.size(); m++){
        temStr = "";
		String calExp = (String)rowCalAry.get(m);
        ArrayList calExpList=DynamicDataInput.FormatString(calExp);

      out.write(_jsp_string1, 0, _jsp_string1.length);
      
            for(int j=0;j<calExpList.size();j++){
            calExp=(String)calExpList.get(j);
			String targetStr ="";
       
      out.write(_jsp_string2, 0, _jsp_string2.length);
      
            if(calExp.indexOf("innerHTML")>0){
		        out.println("if(i.indexOf('_')>=0){i=parseInt(i.substring(0,i.indexOf('_')));}");
				targetStr=calExp.substring(0,calExp.indexOf("innerHTML")-7)+"_span\")";
				out.println("if("+targetStr+"){");
            if (calExp.indexOf("=") != calExp.length()-1) {
            	 out.println("try{"); 
            	 out.println(calExp.replace("span","_span")+"; "); 
				 out.println(calExp.replace("span","_span_d")+"; ");
				 out.println("try{ ");
					 String isshowDiv= "";
					 if(targetStr.indexOf("_")>=0){
						isshowDiv =targetStr.substring(0,targetStr.indexOf("_")).replace("field","")+"\"+i)";
					 }
				    out.println("if("+isshowDiv+"){");
				       out.println("document.getElementById("+isshowDiv+".value).innerHTML="+targetStr+".innerHTML");
                    out.println("}");
				 out.println("}catch(ev){} ");
            	 try{
             		 if(calExp.indexOf("=")>=0){
             			 String[] calSplitSign=calExp.split("=");
             			 String rightequalsmark = calSplitSign[0].replace(".innerHTML","");
             			 String leftequalsmark = calSplitSign[1].replace(".replace(/,/g,\"\"))", "").replace("parse_Float(", "").replace(".value", ""); 
             			 if(leftequalsmark.indexOf("/")>=0){
             				  String leftdivide  =leftequalsmark.split("/")[0];
             				  String rightdivide =leftequalsmark.split("/")[1];
             				  String inputObj = rightequalsmark.replace("+\"span\")",")");
             				  out.println(" if("+rightequalsmark+".innerHTML == \"Infinity\" ||  "+rightequalsmark+".innerHTML == \"-Infinity\" || "+rightequalsmark+".innerHTML == \"NaN\"){");
             				  out.println("if("+inputObj+".viewtype == 1){"); //\u5fc5\u586b
             				  out.println(rightequalsmark+".innerHTML=\"<img src='/images/BacoError_wev8.gif' align=absmiddle>\";");
             				  out.println("}else{");
             				  out.println(rightequalsmark+".innerHTML='';");
             				  out.println("}");
             				  out.println(inputObj+".value='';");
             				  out.println("return;");
             				  out.println("}");
             			 }
             		 } 
             	  }catch(Exception e){}
             	  out.println("}catch(ex){");
             	  out.println("}");
            }
            out.println("}");
			
			out.println("if("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").getAttribute('datetype')=='int' && "+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").getAttribute('datavaluetype')!='5'){ ") ;
			out.println(calExp.substring(0,calExp.indexOf("=")).replace("span","_span")+"=toPrecision("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value,0);");
			out.println(calExp.substring(0,calExp.indexOf("=")).replace("span","_span_d")+"=toPrecision("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value,0);");
			out.println("}else if("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").getAttribute('datetype')!='int' && "+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").getAttribute('datavaluetype')=='5'){");
               out.println("if("+targetStr+"){");
			     out.println(targetStr+".innerHTML=changeToThousandsVal("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value)+'';");
				  out.println(targetStr.replace("_span","_span_d")+".innerHTML=changeToThousandsVal("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value)+'';");
			   out.println("try{ ");
			   String isshowDiv= "";
			     if(targetStr.indexOf("_")>=0){
				   isshowDiv =targetStr.substring(0,targetStr.indexOf("_")).replace("field","")+"\"+i)";
			     }
				out.println("if("+isshowDiv+"){");
			    out.println("document.getElementById("+isshowDiv+".value).innerHTML=changeToThousandsVal("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value)+'';");
               out.println("}");
			   out.println("}catch(ev){} ");
               out.println("}");
                 String targetValue = targetStr.substring(0,targetStr.lastIndexOf("+"))+")";
                 out.println("if("+targetValue+"){");
			     out.println(targetValue+".value=changeToThousandsVal("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value)+'';");
                out.println("}");
			 out.println("}else if("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").getAttribute('datetype')!='int' && "+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").getAttribute('datavaluetype')=='4'){");
             out.println("try{ ");
					 if(targetStr.indexOf("_")>=0){
						isshowDiv =targetStr.substring(0,targetStr.indexOf("_")).replace("field","")+"\"+i)";
					 }
				    out.println("if("+isshowDiv+"){");
				        out.println("var moneyFormat ="+targetStr+".innerHTML ");
					   out.println("if(moneyFormat == '' || moneyFormat == 0 || moneyFormat == '0'){");
					    out.println("moneyFormat= '0.00'");
					   out.println("}else{");
					     out.println("moneyFormat= (milfloatFormat(toPrecision("+targetStr+".innerHTML,datalength))); "); 
					   out.println("}");
				       out.println("document.getElementById("+isshowDiv+".value).innerHTML=numberChangeToChinese("+targetStr+".innerHTML)+'('+moneyFormat+')';");
                       out.println(targetStr.replace("_span","_span_d")+".innerHTML=numberChangeToChinese("+targetStr+".innerHTML)+'('+moneyFormat+')';");
					out.println("}");
				 out.println("}catch(ev){} ");
				  String  resultNum = calExp.substring(0,calExp.indexOf("innerHTML")-9).substring(calExp.indexOf("field")+5)+"+\"_d";
            out.println("try{");
              out.println("if("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+"+\"_d\")){");
                  out.println(" var fieldtype="+calExp.substring(0,calExp.indexOf("innerHTML")-9)+"+\"_d\").getAttribute('datavaluetype');");
                    out.println("  if(fieldtype == 4){");
                             out.println(" document.getElementById(\"field_lable"+resultNum+"\").value = toPrecision("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+"+\"_d\").value,datalength);");
                           out.println(" numberToFormat(\""+resultNum+"\");");
			           out.println("document.getElementById(\"field_lable"+resultNum+"\").onchange()");
                     out.println("}");
                   out.println("}");
                out.println("}catch(e){");
		        out.println("}");
			 out.println("}else{");
                out.println("if("+targetStr+"){");
                 out.println(targetStr+".innerHTML=toPrecision("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value,datalength);");
			   out.println(targetStr.replace("_span","_span_d")+".innerHTML=toPrecision("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value,datalength);");
			  out.println("try{ ");
			  if(targetStr.indexOf("_")>=0){
						isshowDiv =targetStr.substring(0,targetStr.indexOf("_")).replace("field","")+"\"+i)";
			  }
			  out.println("if("+isshowDiv+"){");
			  out.println("document.getElementById("+isshowDiv+".value).innerHTML=toPrecision("+calExp.substring(0,calExp.indexOf("innerHTML")-9)+").value,datalength);");
              out.println("}");
		     out.println("}catch(ev){} ");
            out.println("}");
            out.println("}");
            }else{
              if(calExp.indexOf("value")>0){
                  targetStr=calExp.substring(0,calExp.indexOf("value")-1);
                  out.println("if("+targetStr+"){");
                  out.println(" datalength = "+targetStr+".getAttribute('datalength');");
                  if (calExp.indexOf("=") != calExp.length()-1) {
            	      out.println(calExp+"; ") ;
                  }
			     out.println("if("+calExp.substring(0,calExp.indexOf("value")-1)+".datatype=='int'){ "+calExp.substring(0,calExp.indexOf("="))+"=toPrecision("+calExp.substring(0,calExp.indexOf("="))+",0);"
				  +"}else{ "+calExp.substring(0,calExp.indexOf("="))+"=toPrecision("+calExp.substring(0,calExp.indexOf("="))+",datalength);}}");
				 out.println(calExp.substring(0,calExp.indexOf("value")-2)+"+\"_d\").value=toPrecision("+calExp.substring(0,calExp.indexOf("="))+",datalength)");
				 out.println(calExp.substring(0,calExp.indexOf("value")-2)+"+\"_d\").onchange();");
                }
             }
            
      out.write(_jsp_string3, 0, _jsp_string3.length);
      
                }
	        
      out.write(_jsp_string4, 0, _jsp_string4.length);
      
    }

      out.write(_jsp_string5, 0, _jsp_string5.length);
      for(int m=0;m<wdtiCount;m++){
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((m));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((m));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      }
      out.write(_jsp_string9, 0, _jsp_string9.length);
      
		for(int m=0;m<mainCalAry.size();m++){
			String str2 =  mainCalAry.get(m).toString();
		    int idx = str2.indexOf("=");
			String str3 = str2.substring(0,idx);
			str3 = str3.substring(str3.indexOf("_")+1);
			String str4 = str2.substring(idx);
			str4 = str4.substring(str4.indexOf("_")+1);
	
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((str4));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      out.print((str3));
      out.write(_jsp_string12, 0, _jsp_string12.length);
      out.print((str3));
      out.write(_jsp_string13, 0, _jsp_string13.length);
      out.print((str3));
      out.write(_jsp_string14, 0, _jsp_string14.length);
      out.print((str3));
      out.write(_jsp_string15, 0, _jsp_string15.length);
      out.print((str3));
      out.write(_jsp_string16, 0, _jsp_string16.length);
      out.print((str3));
      out.write(_jsp_string17, 0, _jsp_string17.length);
      out.print((str3));
      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print((str3));
      out.write(_jsp_string19, 0, _jsp_string19.length);
      out.print((str3));
      out.write(_jsp_string20, 0, _jsp_string20.length);
      out.print((str3));
      out.write(_jsp_string21, 0, _jsp_string21.length);
      out.print((str3));
      out.write(_jsp_string22, 0, _jsp_string22.length);
      out.print((str3));
      out.write(_jsp_string23, 0, _jsp_string23.length);
      out.print((str3));
      out.write(_jsp_string24, 0, _jsp_string24.length);
      out.print((str3));
      out.write(_jsp_string25, 0, _jsp_string25.length);
      out.print((str3));
      out.write(_jsp_string26, 0, _jsp_string26.length);
      out.print((str3));
      out.write(_jsp_string27, 0, _jsp_string27.length);
      out.print((str3));
      out.write(_jsp_string28, 0, _jsp_string28.length);
      out.print((str3));
      out.write(_jsp_string29, 0, _jsp_string29.length);
      out.print((str3));
      out.write(_jsp_string30, 0, _jsp_string30.length);
      out.print((str3));
      out.write(_jsp_string31, 0, _jsp_string31.length);
      out.print((str3));
      out.write(_jsp_string32, 0, _jsp_string32.length);
      out.print((str3));
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print((str3));
      out.write(_jsp_string34, 0, _jsp_string34.length);
      out.print((str3));
      out.write(_jsp_string35, 0, _jsp_string35.length);
      out.print((str3));
      out.write(_jsp_string36, 0, _jsp_string36.length);
      out.print((str3));
      out.write(_jsp_string37, 0, _jsp_string37.length);
      }
      out.write(_jsp_string38, 0, _jsp_string38.length);
      for(int m=0;m<wdtiCount;m++){
      out.write(_jsp_string39, 0, _jsp_string39.length);
      out.print((m));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((m));
      out.write(_jsp_string40, 0, _jsp_string40.length);
      }
      out.write(_jsp_string41, 0, _jsp_string41.length);
      
    for(int m=0; m<colCalAry.size(); m++){
		String str = colCalAry.get(m).toString();
		str = str.substring(str.indexOf("_")+1);
		if("0".equals(isBill)){
			 RecordSet.executeSql("select fielddbtype from workflow_formdict where id=" + str);
        }else{
        	 RecordSet.executeSql("select fielddbtype from workflow_billfield where id=" + str);
        }
		int decimaldigits_t =2;
    	if("oracle".equals(RecordSet.getDBType())){
    		 if(RecordSet.next()){
    	        	String fielddbtypeStr=RecordSet.getString("fielddbtype");
    	        	if(fielddbtypeStr.indexOf("number")>=0){
    	        		int digitsIndex = fielddbtypeStr.indexOf(",");
        				if(digitsIndex > -1){
        					decimaldigits_t = Util.getIntValue(fielddbtypeStr.substring(digitsIndex+1, fielddbtypeStr.length()-1), 2);
        				}else{
        					decimaldigits_t = 2;
        				}
    	        	}else{
    	        		if(fielddbtypeStr.equals("integer")){
    	        			decimaldigits_t = 0;
    	        		}
    	        	}
    	        }
    	}else{
    		 if(RecordSet.next()){
 	        	String fielddbtypeStr=RecordSet.getString("fielddbtype");
 	        	if(fielddbtypeStr.indexOf("decimal")>=0){
 	        		int digitsIndex = fielddbtypeStr.indexOf(",");
     				if(digitsIndex > -1){
     					decimaldigits_t = Util.getIntValue(fielddbtypeStr.substring(digitsIndex+1, fielddbtypeStr.length()-1), 2);
     				}else{
     					decimaldigits_t = 2;
     				}
 	        	}else{
 	        		if("int".equals(fielddbtypeStr)){
 	        			decimaldigits_t = 0;
 	        		}
 	        	}
 	        }
    	}
		//String defaultValue = "0";
	   // if(null != summap.get(str)&&!"".equals((String)summap.get(str))){
		//	  defaultValue = (String)summap.get(str);
		//}

      out.write(_jsp_string42, 0, _jsp_string42.length);
      out.print((str));
      out.write(_jsp_string43, 0, _jsp_string43.length);
      out.print((decimaldigits_t));
      out.write(_jsp_string44, 0, _jsp_string44.length);
      out.print((str));
      out.write(_jsp_string45, 0, _jsp_string45.length);
      out.print((str));
      out.write(_jsp_string46, 0, _jsp_string46.length);
      out.print((str));
      out.write(_jsp_string47, 0, _jsp_string47.length);
      out.print((str));
      out.write(_jsp_string48, 0, _jsp_string48.length);
      
    }

      out.write(_jsp_string49, 0, _jsp_string49.length);
      
      for(int u=0;u<colCalAry.size();u++){
    	  String fieldStr =(String)colCalAry.get(u);
		  String  defaultValue = "0";
    	  fieldStr =fieldStr.replaceAll("detailfield_","");
		  if(null != summap.get(fieldStr)&&!"".equals((String)summap.get(fieldStr))){
			  defaultValue = (String)summap.get(fieldStr);
		   }
    	 for(int o=0;o<wdtiCount;o++){
     
      out.write(_jsp_string50, 0, _jsp_string50.length);
      out.print((o));
      out.write(_jsp_string51, 0, _jsp_string51.length);
      out.print((o));
      out.write(_jsp_string52, 0, _jsp_string52.length);
      out.print((defaultValue));
      out.write(_jsp_string53, 0, _jsp_string53.length);
      out.print((fieldStr));
      out.write(_jsp_string54, 0, _jsp_string54.length);
      out.print((fieldStr));
      out.write(_jsp_string55, 0, _jsp_string55.length);
      out.print((fieldStr));
      out.write(_jsp_string56, 0, _jsp_string56.length);
      }}
      out.write(_jsp_string57, 0, _jsp_string57.length);
      out.print((wdtiCount));
      out.write(_jsp_string58, 0, _jsp_string58.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/1/calJsdetail.jsp"), 5862678363886992611L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string19;
  private final static char []_jsp_string20;
  private final static char []_jsp_string40;
  private final static char []_jsp_string24;
  private final static char []_jsp_string33;
  private final static char []_jsp_string28;
  private final static char []_jsp_string6;
  private final static char []_jsp_string41;
  private final static char []_jsp_string8;
  private final static char []_jsp_string27;
  private final static char []_jsp_string37;
  private final static char []_jsp_string47;
  private final static char []_jsp_string49;
  private final static char []_jsp_string10;
  private final static char []_jsp_string51;
  private final static char []_jsp_string11;
  private final static char []_jsp_string17;
  private final static char []_jsp_string32;
  private final static char []_jsp_string4;
  private final static char []_jsp_string3;
  private final static char []_jsp_string38;
  private final static char []_jsp_string42;
  private final static char []_jsp_string30;
  private final static char []_jsp_string12;
  private final static char []_jsp_string45;
  private final static char []_jsp_string25;
  private final static char []_jsp_string44;
  private final static char []_jsp_string26;
  private final static char []_jsp_string54;
  private final static char []_jsp_string21;
  private final static char []_jsp_string16;
  private final static char []_jsp_string39;
  private final static char []_jsp_string46;
  private final static char []_jsp_string29;
  private final static char []_jsp_string0;
  private final static char []_jsp_string43;
  private final static char []_jsp_string9;
  private final static char []_jsp_string15;
  private final static char []_jsp_string5;
  private final static char []_jsp_string57;
  private final static char []_jsp_string7;
  private final static char []_jsp_string53;
  private final static char []_jsp_string36;
  private final static char []_jsp_string50;
  private final static char []_jsp_string22;
  private final static char []_jsp_string31;
  private final static char []_jsp_string52;
  private final static char []_jsp_string13;
  private final static char []_jsp_string23;
  private final static char []_jsp_string14;
  private final static char []_jsp_string56;
  private final static char []_jsp_string35;
  private final static char []_jsp_string58;
  private final static char []_jsp_string48;
  private final static char []_jsp_string2;
  private final static char []_jsp_string55;
  private final static char []_jsp_string34;
  private final static char []_jsp_string18;
  private final static char []_jsp_string1;
  static {
    _jsp_string19 = "\").getAttribute(\"datatype\")==\"text\"){\r\n						document.getElementById(\"field".toCharArray();
    _jsp_string20 = "span\").innerHTML=\"\";\r\n					}else{\r\n						if(document.getElementById(\"field".toCharArray();
    _jsp_string40 = "').value);\r\n    if(temprow>rows) rows=temprow;\r\n    ".toCharArray();
    _jsp_string24 = "\")){\r\n						         document.getElementById(\"field".toCharArray();
    _jsp_string33 = "span\").innerHTML=toPrecision(sum,datalength);\r\n						     }\r\n							\r\n							try{\r\n								 if(document.getElementById(\"field".toCharArray();
    _jsp_string28 = "span\")){\r\n							    document.getElementById(\"field".toCharArray();
    _jsp_string6 = "\r\n         var temprow=0;\r\n         if(document.getElementById('nodenum".toCharArray();
    _jsp_string41 = "\r\n    if(rowindex<rows)\r\n        rowindex=rows;\r\n    var sum=0;\r\n    var temStr;\r\n".toCharArray();
    _jsp_string8 = "').value);\r\n         if(temprow>rows) rows=temprow;\r\n    ".toCharArray();
    _jsp_string27 = "\").getAttribute(\"datavaluetype\")== \"5\"){\r\n							if(document.getElementById(\"field".toCharArray();
    _jsp_string37 = ");\r\n								             }catch(e){\r\n								             }\r\n								       }\r\n								  }\r\n							}catch(e){}\r\n						}\r\n					}\r\n\r\n                }\r\n	     ".toCharArray();
    _jsp_string47 = "\")!=null){\r\n        	document.getElementById(\"sumvalue".toCharArray();
    _jsp_string49 = "\r\n	calMainField(obj);\r\n}\r\n \r\n\r\n\r\nfunction getEvent() {\r\n	if (window.ActiveXObject) {\r\n		return window.event;// \u5982\u679c\u662fie\r\n	}\r\n	func = getEvent.caller;\r\n	while (func != null) {\r\n		var arg0 = func.arguments[0];\r\n		if (arg0) {\r\n			if ((arg0.constructor == Event || arg0.constructor == MouseEvent)\r\n					|| (typeof (arg0) == \"object\" && arg0.preventDefault && arg0.stopPropagation)) {\r\n				return arg0;\r\n			}\r\n		}\r\n		func = func.caller;\r\n	}\r\n	return null;\r\n}\r\n\r\nwindow.onload = function (){\r\n    var detailrow = 0; \r\n     ".toCharArray();
    _jsp_string10 = "\r\n               var sum=0;\r\n               var temStr;\r\n                for(i=0; i<rowindex; i++){\r\n\r\n                    try{\r\n                        temStr=$GetEle(\"field".toCharArray();
    _jsp_string51 = "\")){\r\n               detailrow=document.getElementById(\"nodenum".toCharArray();
    _jsp_string11 = "_\"+i).value;\r\n                        temStr = temStr.replace(/,/g,\"\");\r\n                        if(temStr+\"\"!=\"\"){\r\n                            sum+=temStr*1;\r\n                        }\r\n                    }catch(e){}\r\n                }\r\n                if($GetEle(\"field".toCharArray();
    _jsp_string17 = "\")){\r\n					if(document.getElementById(\"field".toCharArray();
    _jsp_string32 = "span\")){\r\n						         document.getElementById(\"field".toCharArray();
    _jsp_string4 = "\r\n       }\r\n       catch(e){}\r\n".toCharArray();
    _jsp_string3 = "\r\n                 }catch(e){}\r\n            ".toCharArray();
    _jsp_string38 = "\r\n }\r\n \r\n function calSum(obj){\r\n    calSumPrice();\r\n    var rows=0;\r\n    ".toCharArray();
    _jsp_string42 = "\r\n             sum=0;\r\n            for(i=0; i<rowindex; i++){\r\n\r\n                try{\r\n                    temStr=document.getElementById(\"field".toCharArray();
    _jsp_string30 = "\")){\r\n							    document.getElementById(\"field".toCharArray();
    _jsp_string12 = "\")){\r\n                      datalength = $GetEle(\"field".toCharArray();
    _jsp_string45 = "\")!=null){\r\n        	document.getElementById(\"sum".toCharArray();
    _jsp_string25 = "\").value=toPrecision(sum,0);\r\n						   }\r\n						}else if(document.getElementById(\"field".toCharArray();
    _jsp_string44 = ";\r\n        \r\n        if(document.getElementById(\"sum".toCharArray();
    _jsp_string26 = "\").getAttribute(\"datatype\")==\"float\" && document.getElementById(\"field".toCharArray();
    _jsp_string54 = "_\"+i);\r\n                   //if(fieldObj){\r\n                        //datalength=fieldObj.getAttribute(\"datalength\");\r\n                       // datatype=fieldObj.getAttribute(\"datatype\");\r\n                        //datavaluetype=fieldObj.getAttribute(\"datavaluetype\");\r\n                       // var  val = new Number(fieldObj.value.replace(/,/g, \"\"));\r\n                       // sumvalue += val;\r\n                  // }\r\n             //  }\r\n              // if(datavaluetype == 5){\r\n                  // document.getElementById(\"sum".toCharArray();
    _jsp_string21 = "\").getAttribute(\"datatype\") == \"int\"){\r\n						   if(document.getElementById(\"field".toCharArray();
    _jsp_string16 = "\").value=toPrecision(sum,datalength);\r\n                }\r\n                if($GetEle(\"field".toCharArray();
    _jsp_string39 = "\r\n    var temprow=0;\r\n    var rowindex = 0;\r\n    if(document.getElementById('nodenum".toCharArray();
    _jsp_string46 = "\").innerHTML=toPrecision(sum,decimalNumber)+\" \";\r\n        }\r\n        if(document.getElementById(\"sumvalue".toCharArray();
    _jsp_string29 = "span\").innerHTML=changeToThousandsVal(toPrecision(sum,datalength)); \r\n							}\r\n							if(document.getElementById(\"field".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n<script language=\"javascript\">\r\nfunction $G(identity, _document) {\r\n	return $GetEle(identity, _document);\r\n}\r\n/**\r\n * \u6839\u636e\u6807\u8bc6\uff08name\u6216\u8005id\uff09\u83b7\u53d6\u5143\u7d20\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u7cfb\u7edf\u4e2d\u5f88\u591a\u5143\u7d20\u6ca1\u6709id\u5c5e\u6027\uff0c\r\n * \u5374\u5728js\u4e2d\u4f7f\u7528document.getElementById(name)\u6765\u83b7\u53d6\u5143\u7d20\u7684\u95ee\u9898\u3002\r\n * @param identity name\u6216\u8005id\r\n * @return \u5143\u7d20\r\n */\r\nfunction $GetEle(identity, _document) {\r\n	var rtnEle = null;\r\n	if (_document == undefined || _document == null) _document = document;\r\n	\r\n	rtnEle = _document.getElementById(identity);\r\n	if (rtnEle == undefined || rtnEle == null) {\r\n		rtnEle = _document.getElementsByName(identity);\r\n		if (rtnEle.length > 0) rtnEle = rtnEle[0];\r\n		else rtnEle = null;\r\n	}\r\n	return rtnEle;\r\n}\r\n\r\nfunction parse_Float(i){\r\n	try{\r\n		i = parseFloat(i);\r\n		if((i+\"\")==(\"NaN\")){\r\n			return 0;\r\n		}else{\r\n			return i;\r\n		}\r\n	}catch(e){\r\n		return 0;\r\n	}\r\n}\r\n\r\nfunction toPrecision(aNumber,precision){\r\n	var temp1 = Math.pow(10,precision);\r\n	var temp2 = new Number(aNumber);\r\n    //QC79136 \u4e2d\u4fee\u6539\r\n	var returnVal = isNaN(Math.round(temp1*temp2) /temp1)?0:Math.round(temp1*temp2) /temp1;\r\n	try{\r\n		if(String(returnVal).indexOf(\"e\")>=0)return returnVal;\r\n	}catch(e){}\r\n	var valInt = (returnVal.toString().split(\".\")[1]+\"\").length;\r\n	if(aNumber == 0){\r\n		return  \"\";\r\n	}\r\n	if(valInt != precision){\r\n	    var lengInt = precision-valInt;\r\n		//\u5224\u65ad\u6dfb\u52a0\u5c0f\u6570\u4f4d0\u7684\u4e2a\u6570\r\n		if(lengInt == 1){\r\n			returnVal += \"0\";\r\n		}else if(lengInt == 2){\r\n			returnVal += \"00\";\r\n		}else if(lengInt == 3){\r\n			returnVal += \"000\";\r\n		}else if(lengInt < 0){\r\n			if(precision == 1){\r\n				returnVal += \".0\";\r\n			}else if(precision == 2){\r\n				returnVal += \".00\";\r\n			}else if(precision == 3){\r\n				returnVal += \".000\";\r\n			}else if(precision == 4){\r\n				returnVal += \".0000\";\r\n			}		\r\n		}		\r\n	}\r\n	return  returnVal;		\r\n}\r\n\r\nfunction changeToThousandsVal(sourcevalue){\r\n	sourcevalue = sourcevalue +\"\";\r\n	if(null != sourcevalue && 0 != sourcevalue){\r\n     if(sourcevalue.indexOf(\".\")<0)\r\n        re = /(\\d{1,3})(?=(\\d{3})+($))/g;\r\n    else\r\n        re = /(\\d{1,3})(?=(\\d{3})+(\\.))/g;\r\n		return sourcevalue.replace(re,\"$1,\");\r\n	}else{\r\n		return sourcevalue;\r\n	}\r\n}\r\n\r\n\r\n\r\n  function calSumPrice(){\r\n     var temv1;\r\n     var datalength = 2;\r\n     var evt = getEvent();\r\n".toCharArray();
    _jsp_string43 = "_\"+i).value;\r\n                    temStr = temStr.replace(/,/g,\"\");\r\n                    if(temStr+\"\"!=\"\"){\r\n                        sum+=temStr*1;\r\n                    }\r\n                }catch(e){;}\r\n            }\r\n            \r\n        var decimalNumber = ".toCharArray();
    _jsp_string9 = "\r\n    if(rowindex<rows)\r\n        rowindex=rows;\r\n	".toCharArray();
    _jsp_string15 = "\").value=toPrecision(sum,0);\r\n                  else\r\n                	  document.getElementById(\"field".toCharArray();
    _jsp_string5 = "\r\n}\r\n\r\nfunction calMainField(obj){\r\n    var rows=0;\r\n    var datalength = 2;\r\n    var rowindex =0;\r\n    ".toCharArray();
    _jsp_string57 = "\r\n}\r\n\r\n	 //\u9a8c\u8bc1\u662f\u5426\u9009\u62e9\u4e3a\u5fc5\u987b\u65b0\u589e\u7684\r\nfunction  needAddRow(){\r\n	var messageInfo = \"\";\r\n    var tableCount = ".toCharArray();
    _jsp_string7 = "')) temprow=parseInt(document.getElementById('nodenum".toCharArray();
    _jsp_string53 = ";\r\n               var datalength = 2;\r\n               //var datatype = \"float\";\r\n              // var datavaluetype = 0;\r\n               //for(i=0;i<detailrow;i++){\r\n                    //var fieldObj = document.getElementById(\"field".toCharArray();
    _jsp_string36 = "\").value=toPrecision(sum,datalength);\r\n								            try{\r\n								                numberToFormat(".toCharArray();
    _jsp_string50 = "\r\n       try{\r\n           if(document.getElementById(\"nodenum".toCharArray();
    _jsp_string22 = "span\")){\r\n						        document.getElementById(\"field".toCharArray();
    _jsp_string31 = "\").value=changeToThousandsVal(toPrecision(sum,datalength)); \r\n							}\r\n						}else{\r\n						     if(document.getElementById(\"field".toCharArray();
    _jsp_string52 = "\").value;\r\n               var sumvalue = ".toCharArray();
    _jsp_string13 = "\").getAttribute(\"datalength\");\r\n                  if($GetEle(\"field".toCharArray();
    _jsp_string23 = "span\").innerHTML=toPrecision(sum,0);\r\n						   }\r\n						   if(document.getElementById(\"field".toCharArray();
    _jsp_string14 = "\").getAttribute(\"datatype\")==\"int\")\r\n                	  document.getElementById(\"field".toCharArray();
    _jsp_string56 = "\").innerHTML = toPrecision(sumvalue,datalength);\r\n              // }\r\n            }\r\n        }catch(e){}\r\n     ".toCharArray();
    _jsp_string35 = "\").getAttribute(\"datavaluetype\");\r\n								        if(filedtype == 4){\r\n								            document.getElementById(\"field_lable".toCharArray();
    _jsp_string58 = ";\r\n	for(var i=0;i<tableCount;i++){\r\n		try{\r\n			var count=0;\r\n		   $(\".isneed_\"+i).each(function() {\r\n			   if(this.getAttribute(\"class\")){\r\n				    count = 1;\r\n			   }\r\n	      });\r\n		  if(count == 0){\r\n			  var  needAddRowObj = jQuery(\"input[id='\"+(\"needAddRow\"+i)+\"']\");\r\n			  if(jQuery(\"input[id='\"+(\"needAddRow\"+i)+\"']\").val() == \"1\"){\r\n				  messageInfo = \"\u5fc5\u987b\u586b\u5199\u7b2c\"+(i+1)+\"\u4e2a\u660e\u7ec6\u8868\u6570\u636e\uff0c\u8bf7\u586b\u5199\";\r\n				  break;\r\n			  }\r\n		  }\r\n		}catch(e){\r\n		   continue;\r\n		}\r\n	}\r\n    return messageInfo;\r\n}\r\n\r\n</script>\r\n\r\n".toCharArray();
    _jsp_string48 = "\").value=toPrecision(sum,decimalNumber);\r\n        }\r\n".toCharArray();
    _jsp_string2 = "\r\n       try {\r\n       ".toCharArray();
    _jsp_string55 = "\").innerHTML = changeToThousandsVal(toPrecision(sumvalue,datalength));\r\n             //  }else{\r\n                   document.getElementById(\"sum".toCharArray();
    _jsp_string34 = "\").getAttribute(\"datavaluetype\")){\r\n								       var filedtype=document.getElementById(\"field".toCharArray();
    _jsp_string18 = "\")&&document.getElementById(\"field".toCharArray();
    _jsp_string1 = "\r\n        try{\r\n            var nowobj=(evt.srcElement ? evt.srcElement : evt.target).name.toString();\r\n            var i=0;\r\n			var testDataValueType = (evt.srcElement ? evt.srcElement : evt.target).getAttribute(\"datavaluetype\");\r\n			if(testDataValueType && testDataValueType == 4){\r\n				 if(nowobj.indexOf('_')>-1){\r\n				   i=nowobj.substr(nowobj.indexOf('_')+1);\r\n				   if(i.indexOf('_')>-1)i=i.substr(i.indexOf('_')+1);\r\n				}\r\n			}else{\r\n				if(nowobj.indexOf('_')>-1){\r\n				   i=nowobj.substr(nowobj.indexOf('_')+1);\r\n				   if(i.indexOf('_')>-1)\r\n						i=i.substr(0,i.indexOf('_'));\r\n				}\r\n			}\r\n        ".toCharArray();
  }
}
