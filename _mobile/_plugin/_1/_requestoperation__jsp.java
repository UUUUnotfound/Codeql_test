/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin._1;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.mobile.plugin.ecology.RequestOperation;
import weaver.mobile.webservices.workflow.*;
import weaver.mobile.webservices.common.Page;
import weaver.general.*;
import org.apache.commons.lang.StringUtils;
import java.util.*;
import weaver.hrm.*;
import weaver.systeminfo.*;
import weaver.workflow.request.WorkflowSpeechAppend;
import org.jsoup.*;
import org.jsoup.nodes.*;
import org.jsoup.safety.*;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import weaver.file.FileUpload;

public class _requestoperation__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.conn.RecordSet RecordSet;
      RecordSet = (weaver.conn.RecordSet) pageContext.getAttribute("RecordSet");
      if (RecordSet == null) {
        RecordSet = new weaver.conn.RecordSet();
        pageContext.setAttribute("RecordSet", RecordSet);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      
request.setCharacterEncoding("UTF-8");
response.setContentType("text/html;charset=UTF-8");
FileUpload fu = new FileUpload(request);
String clienttype = Util.null2String(fu.getParameter("clienttype"));
String clientlevel = Util.null2String(fu.getParameter("clientlevel"));
String detailid = Util.null2String(fu.getParameter("detailid"));
String from = Util.null2String(fu.getParameter("from"));
String module = Util.null2String(fu.getParameter("module"));
String scope = Util.null2String(fu.getParameter("scope"));
String mobileSession = Util.null2String(fu.getParameter("mobileSession"));
String currentnodeid = Util.null2String(fu.getParameter("nodeid"));
String client = Util.null2String(fu.getParameter("client"));
String type = Util.null2String(fu.getParameter("type"));
String requestid = Util.null2String(fu.getParameter("requestid"));
String src = Util.null2String(fu.getParameter("src"));
String clientip = Util.null2String(fu.getParameter("clientip"));
String forwardresourceids = Util.null2String(fu.getParameter("forwardresourceids"));
String forwardresourceids2 = Util.null2String(fu.getParameter("forwardresourceids2"));
String forwardresourceids3 = Util.null2String(fu.getParameter("forwardresourceids3"));
String remark = Util.null2String(fu.getParameter("userSignRemark"));
String userid = Util.null2String(fu.getParameter("userid"));
String workflowid = Util.null2String(fu.getParameter("workflowid"));
String fromPage = Util.null2String(fu.getParameter("fromPage"));
int forwardflag = Util.getIntValue(fu.getParameter("forwardflag"),0);
int rejectToNodeId = Util.getIntValue(fu.getParameter("rejectToNodeid"),0);
int markId = Util.getIntValue(fu.getParameter("markId"), -1);
String method2 = fu.getParameter("method2");
//\u83b7\u53d6\u5f53\u524d\u7248\u672c
String clientVer = Util.null2String(fu.getParameter("clientver"));
String serverVer = Util.null2String(fu.getParameter("serverver"));

User user = HrmUserVarify.getUser(request,response) ;
if(user == null)  return;

//\u5c06\u7b7e\u5b57\u610f\u89c1\u4e2d\u7684\u6362\u884c\u5185\u5bb9\u66ff\u6362\u6210\u6362\u884c\u6807\u7b7e\u3002

remark = remark.replaceAll("\r\n", "<br/>");

//\u6839\u636e\u5ba2\u6237\u7aef\u7c7b\u578b\u8f6c\u6362\u6210\u6570\u5b57\u5e38\u91cf\u3002

String clientType = "";
if (clienttype.equalsIgnoreCase("ipad")) {
    clientType = "3";
} else if (clienttype.equalsIgnoreCase("iphone")){
   clientType = "2";
} else if (clienttype.equalsIgnoreCase("Webclient")){
   clientType = "1";
} else if (clienttype.equalsIgnoreCase("Android")){
   clientType = "4";
} else if (clienttype.equalsIgnoreCase("AndPad")){
   clientType = "5";
}

//\u5224\u65ad\u5f53\u524d\u5ba2\u6237\u7aef\u7a0b\u5e8f\u7248\u672c\u662f\u5426\u9ad8\u4e8e4.5
boolean flagClientVersion4_5 = RequestOperation.compareVersion(clientVer, RequestOperation.VERSION_45);
//\u5224\u65ad\u5f53\u524dMobile\u7a0b\u5e8f\u7248\u672c\u662f\u5426\u9ad8\u4e8e4.5
boolean flagServerVersion4_5 = RequestOperation.compareVersion(serverVer, RequestOperation.VERSION_45);

int speechAttachment = 0;
int handWrittenSign = 0;
String isannexUpload = "";
if(flagServerVersion4_5){
	//\u83b7\u53d6\u8bed\u97f3\u9644\u4ef6
	String speechAppendix = Util.null2String(fu.getParameter("fieldSpeechAppend"));
	//\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u5176\u4ee5\u9644\u4ef6\u5f62\u5f0f\u4e0a\u4f20\u3002

	if(!"".equals(speechAppendix)){
	  speechAttachment = WorkflowSpeechAppend.uploadAppend(speechAppendix, WorkflowSpeechAppend.FMT_SPEECHATTACHMENT);
	}
	
	//\u83b7\u53d6\u624b\u5199\u7b7e\u6279\u6570\u636e
	String fieldHandWritten = Util.null2String(fu.getParameter("fieldHandWritten"));
	//\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u5176\u4ee5\u9644\u4ef6\u5f62\u5f0f\u4e0a\u4f20\u3002

	if(!"".equals(fieldHandWritten)){
	  handWrittenSign = WorkflowSpeechAppend.uploadAppend(fieldHandWritten, WorkflowSpeechAppend.FMT_HANDWRITTEN_SIGN);
	}
	
	//\u5904\u7406\u7535\u5b50\u7b7e\u7ae0
	if(markId > 0){
	  remark+="<br/><br/><img alt='electricSignature' name='electricSignature' src='/weaver/weaver.file.SignatureDownLoad?markId=" + markId + "'>";
	}
	
	int[] annexDocCategory = weaver.workflow.workflow.WorkflowComInfo.getAnnexDocCategory(workflowid);
	isannexUpload = weaver.mobile.plugin.ecology.RequestOperation.uploadSignatureAppends(fu, user, annexDocCategory);
}

if(remark.indexOf("'")!=-1){
   remark = remark.replace("\'","&#39;");
}
//\u8bfb\u53d6\u914d\u7f6e\u9879\u7684\u503c\uff0c\u5bf9\u7b7e\u5b57\u610f\u89c1\u5185\u5bb9\u662f\u5426\u52a0\u4e0a\u624b\u673a\u7248\u4e0a\u7279\u6709\u6765\u6e90\u4fe1\u606f\u3002

int isShowTerminal = Util.getIntValue(fu.getParameter("_isShowTerminal_"), 1);
if (1 == isShowTerminal) {
	if(clienttype.equalsIgnoreCase("Webclient")){
		remark += ("<br/><br/><span style='font-size:11px;color:#666;'>\u6765\u81eaWeb\u624b\u673a\u7248</span>");
	}else{
		remark += ("<br/><br/><span style='font-size:11px;color:#666;'>\u6765\u81ea" + clienttype + "\u5ba2\u6237\u7aef</span>");
	}
}else {
	remark += "\r\n";
}

WorkflowRequestInfo workflowRequestInfo = null;
WorkflowService wfs = new WorkflowServiceImpl();
String wfReqInfoKey = "";
String sessionkey = Util.null2String((String)request.getParameter("sessionkey"));
if("create".equals(method2)){
  	wfReqInfoKey = sessionkey + "_"+ workflowid + "_"+ user.getUID();
} else {
	//workflowRequestInfo = wfs.getWorkflowRequest4split(Util.getIntValue(requestid, 0), user.getUID(), 0, 10000); 
	wfReqInfoKey = sessionkey + "_" + workflowid + "_" + requestid + "_"+ userid;
}

//\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\u6d41\u7a0b\u8868\u5355\u57fa\u7840\u6570\u636e
StaticObj staticObj = StaticObj.getInstance();
synchronized(staticObj){
	Map mapWfReqInfos = (Map)staticObj.getObject("MOBILE_WORKFLOWREQUESTINFO_CACHE");
	if (mapWfReqInfos != null) {
		workflowRequestInfo = (WorkflowRequestInfo)mapWfReqInfos.get(wfReqInfoKey);
		mapWfReqInfos.remove(wfReqInfoKey);
	}
	
	//\u5f53\u7f13\u5b58\u4e2d\u7684\u9879\u5927\u4e8e10000\u65f6\uff0c\u81ea\u52a8\u6e05\u9664\u7f13\u5b58
	if (mapWfReqInfos.entrySet().size() >= 10001) {
		mapWfReqInfos.clear();
		//System.err.println("wipe mobile catche!");
	} 
	
	if (workflowRequestInfo == null) {
	    //\u521b\u5efa\u65f6\uff0c\u5982\u679csessionkey\u53d1\u751f\u53d8\u5316\uff0c\u7f13\u5b58\u5bf9\u8c61\u65e0\u6cd5\u83b7\u53d6\uff0c\u5219\u4ece\u6570\u636e\u5e93\u4e2d\u91cd\u65b0\u67e5\u8be2\u5bf9\u8c61
	    if (Util.getIntValue(requestid, 0) <= 0) {
	        workflowRequestInfo = wfs.getCreateWorkflowRequestInfo(Util.getIntValue(workflowid), user.getUID());
	    } else {
	        workflowRequestInfo = wfs.getWorkflowRequest4split(Util.getIntValue(requestid, 0), user.getUID(), 0, 10000);
	    }
		
		//System.err.println("failed to get the object from the cache!");
	} else {
		//System.err.println("success derives from the cache object!");
	}
}

int[] docCategory = WorkflowSpeechAppend.getDocCategory(workflowid, fu);
workflowRequestInfo = weaver.mobile.plugin.ecology.RequestOperation.getWorkflowRequestInfoFromRequest(fu, workflowRequestInfo, user, docCategory);
workflowRequestInfo.setRejectToNodeid(rejectToNodeId);

String result = "";
workflowRequestInfo.setSpeechAttachment(speechAttachment);
workflowRequestInfo.setHandWrittenSign(handWrittenSign);
workflowRequestInfo.setSignatureAppendfix(isannexUpload);

if("submit".equals(src)||"subnoback".equals(src)||"subback".equals(src)){
	if("create".equals(method2)){
		result = wfs.doCreateWorkflowRequest(workflowRequestInfo, user.getUID(), remark, clientType,src);
	} else {
		result = wfs.submitWorkflowRequest(workflowRequestInfo, Util.getIntValue(requestid), user.getUID(), src, remark, clientType);
	}
} else if("reject".equals(src)){
	result = wfs.submitWorkflowRequest(workflowRequestInfo, Util.getIntValue(requestid), user.getUID(), src, remark, clientType);
} else if("forward".equals(src) && forwardflag == 1 ){
	String[] forwardids = StringUtils.split(forwardresourceids,","); 
	String forwardidvalue = "";
	for(int p=0;forwardids!=null&&forwardids.length>0&&p<forwardids.length;p++){
		String value = forwardids[p];
		if(StringUtils.isNotEmpty(value)){
			forwardidvalue+=","+value;
		}
	}
	forwardidvalue = forwardidvalue.startsWith(",")?forwardidvalue.substring(1):forwardidvalue;
	if(clientip==null||"".equals(clientip)){
		String regex = "(((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))";
        Pattern p = Pattern.compile(regex);
		clientip = StringUtils.defaultIfEmpty(request.getHeader("X-Forwarded-For"),"");
        Matcher m = p.matcher(clientip);
        if (clientip == null || "".equals(clientip) || !m.matches()) {
        	clientip = request.getRemoteAddr();
        }
	}
	result = wfs.forwardWorkflowRequest(Util.getIntValue(requestid), forwardidvalue, remark, user.getUID(), clientip, clientType, handWrittenSign, speechAttachment, isannexUpload);
	
} else if("forward".equals(src) && forwardflag == 2 ){
	String[] forwardids = StringUtils.split(forwardresourceids2,","); 
	String forwardidvalue = "";
	for(int p=0;forwardids!=null&&forwardids.length>0&&p<forwardids.length;p++){
		String value = forwardids[p];
		if(StringUtils.isNotEmpty(value)){
			forwardidvalue+=","+value;
		}
	}
	forwardidvalue = forwardidvalue.startsWith(",")?forwardidvalue.substring(1):forwardidvalue;
	if(clientip==null||"".equals(clientip)){
		String regex = "(((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))";
        Pattern p = Pattern.compile(regex);
		clientip = StringUtils.defaultIfEmpty(request.getHeader("X-Forwarded-For"),"");
        Matcher m = p.matcher(clientip);
        if (clientip == null || "".equals(clientip) || !m.matches()) {
        	clientip = request.getRemoteAddr();
        }
	}
	
	result = wfs.forwardWorkflowRequest(Util.getIntValue(requestid), forwardidvalue, remark, user.getUID(), clientip, clientType, forwardflag, handWrittenSign, speechAttachment, isannexUpload);
	
} else if("forward".equals(src) && forwardflag == 3 ){
	String[] forwardids = StringUtils.split(forwardresourceids3,","); 
	String forwardidvalue = "";
	for(int p=0;forwardids!=null&&forwardids.length>0&&p<forwardids.length;p++){
		String value = forwardids[p];
		if(StringUtils.isNotEmpty(value)){
			forwardidvalue+=","+value;
		}
	}
	forwardidvalue = forwardidvalue.startsWith(",")?forwardidvalue.substring(1):forwardidvalue;
	if(clientip==null||"".equals(clientip)){
		String regex = "(((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))[.](((2[0-4]\\d)|(25[0-5]))|(1\\d{2})|([1-9]\\d)|(\\d))";
        Pattern p = Pattern.compile(regex);
		clientip = StringUtils.defaultIfEmpty(request.getHeader("X-Forwarded-For"),"");
        Matcher m = p.matcher(clientip);
        if (clientip == null || "".equals(clientip) || !m.matches()) {
        	clientip = request.getRemoteAddr();
        }
	}
	
	result = wfs.forwardWorkflowRequest(Util.getIntValue(requestid), forwardidvalue, remark, user.getUID(), clientip, clientType, forwardflag, handWrittenSign, speechAttachment, isannexUpload);
	
}

boolean flagResult = (Util.getIntValue(result, 0)>0 || "success".equals(result));

if("client.jsp".equals(fromPage)){   
      out.write(_jsp_string2, 0, _jsp_string2.length);
      out.print((flagResult));
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((result));
      out.write(_jsp_string4, 0, _jsp_string4.length);
       }else{                            
      out.write(_jsp_string5, 0, _jsp_string5.length);
      if (clienttype.equals("Webclient")) {
      out.write(_jsp_string6, 0, _jsp_string6.length);
      } else {
      out.write(_jsp_string7, 0, _jsp_string7.length);
      }
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((workflowRequestInfo.getWorkflowBaseInfo().getWorkflowName() ));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      
					if(flagResult) {
					
      out.write(_jsp_string10, 0, _jsp_string10.length);
      
					} else {
					
      out.write(_jsp_string11, 0, _jsp_string11.length);
      } 
      out.write(_jsp_string12, 0, _jsp_string12.length);
      out.print((module));
      out.write(_jsp_string13, 0, _jsp_string13.length);
      out.print((scope));
      out.write(_jsp_string14, 0, _jsp_string14.length);
       } 
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/1/RequestOperation.jsp"), 7269120085229953353L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string13;
  private final static char []_jsp_string12;
  private final static char []_jsp_string5;
  private final static char []_jsp_string14;
  private final static char []_jsp_string11;
  private final static char []_jsp_string4;
  private final static char []_jsp_string8;
  private final static char []_jsp_string6;
  private final static char []_jsp_string10;
  private final static char []_jsp_string7;
  private final static char []_jsp_string2;
  private final static char []_jsp_string3;
  private final static char []_jsp_string0;
  private final static char []_jsp_string9;
  private final static char []_jsp_string1;
  static {
    _jsp_string13 = "&scope=".toCharArray();
    _jsp_string12 = "\r\n				</div>\r\n			</div>\r\n		</div>\r\n	</div>\r\n	\r\n	\r\n</div>\r\n\r\n\r\n<script type=\"text/javascript\">	\r\n	function goBack() {\r\n		location = \"/list.do?module=".toCharArray();
    _jsp_string5 = "\r\n\r\n<html><head>\r\n	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n	<meta name=\"author\" content=\"Weaver E-Mobile Dev Group\" />\r\n	<meta name=\"description\" content=\"Weaver E-mobile\" />\r\n	<meta name=\"keywords\" content=\"weaver,e-mobile\" />\r\n	<meta name=\"viewport\" content=\"width=device-width,minimum-scale=1.0, maximum-scale=1.0\" />\r\n	<title></title>\r\n	<script type='text/javascript' src='/mobile/plugin/js/jquery/jquery_wev8.js'></script>\r\n	<script type='text/javascript' src='/mobile/plugin/js/jquery/jquery-ui_wev8.js'></script>\r\n	<link rel=\"stylesheet\" href=\"/mobile/plugin/css/cupertino/jquery-ui_wev8.css\" type=\"text/css\">\r\n	<link rel=\"stylesheet\" href=\"/mobile/plugin/css/mobile_wev8.css\" type=\"text/css\">\r\n</head>\r\n<body style=\"margin:0;padding:0;\">\r\n\r\n<div id=\"view_page\">\r\n\r\n	<div id=\"view_header\" style=\"".toCharArray();
    _jsp_string14 = "\";\r\n	}\r\n	\r\n	function logout() {\r\n		location = \"/logout.do\";\r\n	}\r\n</script>\r\n\r\n</body>\r\n</html> ".toCharArray();
    _jsp_string11 = "\r\n						\u6d41\u7a0b\u5904\u7406\u5931\u8d25\uff01\r\n\r\n					".toCharArray();
    _jsp_string4 = "\";			\r\n		return url;\r\n	}\r\n//-->\r\n</script>\r\n\r\n".toCharArray();
    _jsp_string8 = "\">\r\n		<table style=\"width:100%;height:40px;font-size:13px;\">\r\n			<tr>\r\n				<td width=\"10%\" align=\"left\" valign=\"middle\" style=\"padding-left:5px;\">\r\n					<a href=\"javascript:goBack();\">\r\n						<div style=\"width:56px;height:26px;background:url('/images/bg-top-btn_wev8.png') no-repeat;text-align:center;line-height:26px;color:#000;\">\r\n						\u8fd4\u56de\r\n						</div>\r\n					</a>\r\n				</td>\r\n				<td align=\"center\" valign=\"middle\">\r\n					<div id=\"view_title\">".toCharArray();
    _jsp_string6 = "display:block;".toCharArray();
    _jsp_string10 = "\r\n						\u6d41\u7a0b\u5904\u7406\u6210\u529f\uff01\r\n\r\n					".toCharArray();
    _jsp_string7 = "display:none;".toCharArray();
    _jsp_string2 = "\r\n\r\n<script type=\"text/javascript\">\r\n<!--\r\n	function submitResult(){		\r\n		var url = \"".toCharArray();
    _jsp_string3 = "\" + \":\" + \"".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string9 = "</div>\r\n				</td>\r\n				<td width=\"10%\" align=\"right\" valign=\"middle\" style=\"padding-right:5px;\">\r\n					<a href=\"javascript:logout();\">\r\n						<div style=\"width:56px;height:26px;background:url('/images/bg-top-btn_wev8.png') no-repeat;text-align:center;line-height:26px;color:#000;\">\r\n						\u9000\u51fa\r\n\r\n						</div>\r\n					</a>\r\n				</td>\r\n			</tr>\r\n		</table>\r\n	</div>\r\n\r\n\r\n	<div class=\"bodyContext\" style=\"background:url(/images/news/viewBg_wev8.png) repeat;margin:0;width:100%;padding-top:20px;padding-bottom:20px;\">\r\n		<div style=\"margin:0 10px 10px 10px;\">\r\n			<div class=\"blockBody\">\r\n				<div style=\"margin:10px;\">\r\n					".toCharArray();
    _jsp_string1 = "\r\n\r\n".toCharArray();
  }
}
