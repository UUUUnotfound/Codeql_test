/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import net.sf.json.*;
import java.util.*;
import weaver.general.*;
import weaver.file.*;
import weaver.hrm.*;
import weaver.conn.*;
import weaver.docs.news.*;
import org.apache.commons.lang.*;

public class _componentcount__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("application/json");
    response.setCharacterEncoding("UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.mobile.plugin.ecology.service.PluginServiceImpl ps;
      ps = (weaver.mobile.plugin.ecology.service.PluginServiceImpl) pageContext.getAttribute("ps");
      if (ps == null) {
        ps = new weaver.mobile.plugin.ecology.service.PluginServiceImpl();
        pageContext.setAttribute("ps", ps);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      
response.setContentType("application/json;charset=UTF-8");

FileUpload fu = new FileUpload(request);

String module = Util.null2String(fu.getParameter("module"));
String scope = Util.null2String(fu.getParameter("scope"));
String sessionkey = Util.null2String(fu.getParameter("sessionkey"));
String setting = Util.null2String(fu.getParameter("setting"));
String mconfig = Util.null2String(fu.getParameter("config"));

if(ps.verify(sessionkey)) {

	List conditions = new ArrayList();
	
	if(StringUtils.isNotEmpty(setting)) {
		if(module.equals("1")||module.equals("7")||module.equals("8")||module.equals("9")||module.equals("10")) {
			String condition = "";
			String cfgstr = setting;
			cfgstr = cfgstr.startsWith(",")?cfgstr.substring(1):cfgstr;
			if(StringUtils.isNotEmpty(cfgstr)) {
				String strSubClause = Util.getSubINClause(cfgstr, "t1.workflowid", "IN");
				if("".equals(condition)){
					 condition += strSubClause;
				} else {
					 condition += " or " + strSubClause;
				}
				if (condition != null && !"".equals(condition)) {
					condition = " (" + condition + ") ";
				}
				conditions.add(condition);
			}
		} else if(module.equals("2")||module.equals("3")) {
			//String[] cfgarr = StringUtils.split(setting, "|");
			String[] cfgarr = setting.split("\\|");
			if(cfgarr!=null&&cfgarr.length>0){
				if (cfgarr[0].equals("1")) {
					//\u6765\u6e90\u65b0\u95fb\u4e2d\u5fc3
					String[] targets = StringUtils.split(cfgarr[1], ",");
					String where = "";
					
					DocNewsManager dnm = new DocNewsManager();
					dnm.setId(Util.getIntValue(targets[0]));
					dnm.getDocNewsInfoById();
					
					where = dnm.getNewsclause();

					where += (StringUtils.isEmpty(where)?"":" and ") + " docpublishtype in ('2','3') ";
					conditions.add(where);
				} else if (cfgarr[0].equals("2")) {
					//\u6765\u6e90\u6587\u6863\u76ee\u5f55
					String targets = cfgarr[1].startsWith(",") ? cfgarr[1].substring(1) : cfgarr[1];
					//String where = " seccategory in (" + targets + ") ";
					String where = " exists (select id from docseccategory where id = seccategory and id in (" + targets + "))";
					conditions.add(where);
				} else if (cfgarr[0].equals("3")) {
					//\u6765\u6e90\u865a\u62df\u76ee\u5f55
					String targets = cfgarr[1].startsWith(",") ? cfgarr[1].substring(1) : cfgarr[1];
					String where = " exists (select 1 from DocDummyDetail where docid = t1.id and catelogid in (" + targets + ")) ";
					conditions.add(where);
				} else if (cfgarr[0].equals("4")) {
					//\u6765\u6e90\u6307\u5b9a\u6587\u6863
					String targets = cfgarr[1].startsWith(",") ? cfgarr[1].substring(1) : cfgarr[1];
					String where = "";
					String[] tmpdocids = StringUtils.split(targets, ",");
					String docids = "";
					for (String docid : tmpdocids) {
						int editionid = 0;
						int newdocid = Util.getIntValue(docid);
						RecordSet rs = new RecordSet();
						rs.executeSql("select doceditionid from docdetail where id=" + docid);
						if(rs.next()) {
							editionid = Util.getIntValue(rs.getString("doceditionid"));
						}
						if (editionid > 0) {
							rs.executeSql("select id from docdetail where docedition=(select max(docedition) from docdetail where doceditionid=" + editionid + ") and doceditionid=" + editionid);
							if(rs.next()) {
								newdocid = Util.getIntValue(rs.getString("id"));
							}
						}
						docids += "," + newdocid;
					}
					docids = docids.startsWith(",") ? docids.substring(1) : docids;
					where = " id in (" + docids + ") ";
					conditions.add(where);
				}
				if(StringUtils.isEmpty(cfgarr[2])||"0".equals(cfgarr[2])){
					String where = " (isreply is null or isreply <> 1) ";
					conditions.add(where);
				}
			}
		}
	}
	
	int unread = 0;
	int count = 0;
	if(module.equals("1")||module.equals("7")||module.equals("8")||module.equals("9")||module.equals("10")) {
		Map result = (Map) ps.getWorkflowCount(Util.getIntValue(module), Util.getIntValue(scope), conditions, sessionkey);
		if(result!=null) {
			unread = Util.getIntValue(Util.null2String((String)result.get("unread")), 0);
			count = Util.getIntValue(Util.null2String((String)result.get("count")), 0);
		}
	}
	if(module.equals("2")||module.equals("3")) {
		Map result = ps.getDocumentCount(conditions, sessionkey);
		if(result!=null) {
			unread = Util.getIntValue(Util.null2String((String)result.get("unread")), 0);
			count = Util.getIntValue(Util.null2String((String)result.get("count")), 0);
		}
	}
	
	Map result = new HashMap();
	
	result.put("count", count+"");
	result.put("unread", unread+"");
	
	JSONObject jo = JSONObject.fromObject(result);
	out.println(jo);
}

    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/ComponentCount.jsp"), 8808892980323866687L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string0;
  static {
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
  }
}
