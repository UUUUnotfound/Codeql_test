/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin._task;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.hrm.resource.ResourceComInfo;
import weaver.general.*;
import weaver.file.FileUpload;
import java.util.*;
import weaver.hrm.*;
import weaver.systeminfo.*;
import weaver.general.StaticObj;
import weaver.general.Util;
import weaver.hrm.settings.RemindSettings;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class _getsublist__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;

  public boolean isHavaHrmChildren(String hrmId){
  		boolean havaSubHrmChildren=false;
  		try{
  			ResourceComInfo rc = new ResourceComInfo();
  			rc.setTofirstRow();
  			while (rc.next()) {
  				String managerid = rc.getManagerID();
  				if (managerid.equals(hrmId) && !rc.getResourceid().equals(hrmId)
  						&& (rc.getStatus().equals("0")||rc.getStatus().equals("1")||
  						rc.getStatus().equals("2")||rc.getStatus().equals("3"))){
  					havaSubHrmChildren=true;
  					break;
  				}		
  			}
  		}catch(Exception e){
  			
  		}
  		return havaSubHrmChildren;
  }

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
	
	response.setHeader("cache-control", "no-cache");
	response.setHeader("pragma", "no-cache");
	response.setHeader("expires", "Mon 1 Jan 1990 00:00:00 GMT");
	

	User user = HrmUserVarify.getUser (request , response) ;
	if(user == null)  return ;
	Log logger= LogFactory.getLog(this.getClass());
	String isIE = (String)session.getAttribute("browser_isie");

      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet rs;
      rs = (weaver.conn.RecordSet) pageContext.getAttribute("rs");
      if (rs == null) {
        rs = new weaver.conn.RecordSet();
        pageContext.setAttribute("rs", rs);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      
	try{
		request.setCharacterEncoding("UTF-8");
		FileUpload fu = new FileUpload(request);
		String userid = Util.null2String(fu.getParameter("userid"));
		int type = Util.getIntValue(fu.getParameter("type"),1);
		if(!userid.equals("")){
			ResourceComInfo rc = new ResourceComInfo();
			rc.setTofirstRow();
			boolean ifSub = false;//\u5f53\u524d\u4eba\u5458\u662f\u5426\u6709\u4e0b\u5c5e
	        while (rc.next()) {
				String supId = rc.getManagerID();
				if(supId.equals(userid) && !rc.getResourceid().equals(userid) && 
				(rc.getStatus().equals("0")||rc.getStatus().equals("1")||
				rc.getStatus().equals("2")||rc.getStatus().equals("3"))){
					ifSub = true;
					String hrmId = rc.getResourceid();
					String hrmName = rc.getLastname();			
					boolean ifHasSub = isHavaHrmChildren(hrmId);

      out.write(_jsp_string3, 0, _jsp_string3.length);
      if(type==2){//\u7b2c\u4e8c\u6b21\u70b9\u51fb\u4e0b\u5c5e 
      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print((userid));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      } 
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((hrmId));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((hrmId));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((hrmName ));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      if(ifHasSub){ 
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((hrmId ));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      }else{ 
      out.write(_jsp_string12, 0, _jsp_string12.length);
      } 
      out.write(_jsp_string13, 0, _jsp_string13.length);
      if(type==2){//\u7b2c\u4e8c\u6b21\u70b9\u51fb\u4e0b\u5c5e 
      out.write(_jsp_string14, 0, _jsp_string14.length);
      } 
      out.write(_jsp_string1, 0, _jsp_string1.length);
      					
				}
			}
			if(!ifSub){
				out.print("<div class='taskTips'><a href='/mobile/plugin/task/taskMain.jsp'>\u60a8\u8fd8\u6ca1\u6709\u4e0b\u5c5e\uff0c\u70b9\u51fb\u8fd9\u91cc\u8fd4\u56de</a></div>");
			}
		}else{
			out.print("<div class='taskTips'>\u6ca1\u6709\u83b7\u53d6\u5230\u7528\u6237\u4fe1\u606f</div>");
		}
	}catch(Exception e){
		out.print("<div class='taskTips'>\u6570\u636e\u52a0\u8f7d\u5931\u8d25,\u8bf7\u7a0d\u540e\u518d\u8bd5</div>");
	}

      out.write(_jsp_string2, 0, _jsp_string2.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/task/getSubList.jsp"), -7616932518862252862L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("page/maint/common/initNoCache.jsp"), 3270256153856711871L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string3;
  private final static char []_jsp_string6;
  private final static char []_jsp_string8;
  private final static char []_jsp_string4;
  private final static char []_jsp_string10;
  private final static char []_jsp_string12;
  private final static char []_jsp_string9;
  private final static char []_jsp_string0;
  private final static char []_jsp_string5;
  private final static char []_jsp_string1;
  private final static char []_jsp_string11;
  private final static char []_jsp_string7;
  private final static char []_jsp_string14;
  private final static char []_jsp_string13;
  private final static char []_jsp_string2;
  static {
    _jsp_string3 = "\r\n	".toCharArray();
    _jsp_string6 = "\r\n	<div class=\"listitem2\">\r\n		<table class=\"listTable\" cellpadding=\"0\" cellspacing=\"0\">\r\n			<tr id=\"listTr_".toCharArray();
    _jsp_string8 = "\">".toCharArray();
    _jsp_string4 = "\r\n		<tr class=\"subTr_".toCharArray();
    _jsp_string10 = "\r\n						<div class=\"subClick\" ifShow=\"0\" userid=\"".toCharArray();
    _jsp_string12 = "\r\n						<div class=\"noneSubClick\"></div>\r\n					".toCharArray();
    _jsp_string9 = "</div></td>\r\n				<td width=\"60\" style=\"padding-left:0px !important;\">\r\n					".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string5 = " subTr\"><td colspan=\"2\">\r\n	".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string11 = "\"></div>\r\n					".toCharArray();
    _jsp_string7 = "\">\r\n				<td><div class=\"hrmName\" userid=\"".toCharArray();
    _jsp_string14 = "\r\n		</td></tr>\r\n	".toCharArray();
    _jsp_string13 = "\r\n				</td>\r\n			</tr>\r\n		</table>\r\n	</div>\r\n	".toCharArray();
    _jsp_string2 = "\r\n\r\n".toCharArray();
  }
}
