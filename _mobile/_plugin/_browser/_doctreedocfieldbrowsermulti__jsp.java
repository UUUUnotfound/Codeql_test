/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin._browser;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import weaver.general.Util;
import weaver.general.BaseBean;
import weaver.hrm.User;
import weaver.systeminfo.SystemEnv;
import weaver.hrm.*;
import weaver.file.FileUpload;

public class _doctreedocfieldbrowsermulti__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      weaver.docs.category.DocTreeDocFieldComInfo DocTreeDocFieldComInfo;
      DocTreeDocFieldComInfo = (weaver.docs.category.DocTreeDocFieldComInfo) pageContext.getAttribute("DocTreeDocFieldComInfo");
      if (DocTreeDocFieldComInfo == null) {
        DocTreeDocFieldComInfo = new weaver.docs.category.DocTreeDocFieldComInfo();
        pageContext.setAttribute("DocTreeDocFieldComInfo", DocTreeDocFieldComInfo);
      }
      out.write(_jsp_string1, 0, _jsp_string1.length);
      weaver.conn.RecordSet RecordSet;
      RecordSet = (weaver.conn.RecordSet) pageContext.getAttribute("RecordSet");
      if (RecordSet == null) {
        RecordSet = new weaver.conn.RecordSet();
        pageContext.setAttribute("RecordSet", RecordSet);
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      
FileUpload fu = new FileUpload(request);
request.setCharacterEncoding("UTF-8");
response.setContentType("text/html;charset=UTF-8");
  
  User user = HrmUserVarify.getUser(request , response);
  if(user==null){
	  out.println("\u767b\u9646\u8d85\u65f6,\u8bf7\u91cd\u65b0\u767b\u9646!");
	  return ;
  }

      out.write(_jsp_string3, 0, _jsp_string3.length);
      
String para=Util.null2String(request.getParameter("para"));

String treeDocFieldIds="";
String needPeop="";
int pos=para.indexOf("_");
if(pos==-1){
	if(para.length()!=0) treeDocFieldIds=para;
	else {
		treeDocFieldIds="";
		needPeop="0";
	}	
} else {
	treeDocFieldIds=para.substring(0,pos);
	needPeop=para.substring(pos+1);
}

String[] treeDocFieldIdArray=Util.TokenizerString2(treeDocFieldIds,",");


String nodeid=null;

boolean exist=false;
if(treeDocFieldIdArray.length>=1){
	nodeid="field_"+treeDocFieldIdArray[treeDocFieldIdArray.length-1];

    String treeDocFieldName=DocTreeDocFieldComInfo.getTreeDocFieldName(treeDocFieldIdArray[0]);
    if(!treeDocFieldName.equals("")){
		exist=true;
	}
    else{
        exist=false;
	}
}

if(!exist){
	nodeid=null;
}

String splitflag=Util.null2String(request.getParameter("splitflag"));
if("".equals(splitflag)) splitflag = ",";

      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print((SystemEnv.getHtmlLabelName(826,user.getLanguage())));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((SystemEnv.getHtmlLabelName(311,user.getLanguage())));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((SystemEnv.getHtmlLabelName(201,user.getLanguage())));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((needPeop));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      
	    for(int i=0;i<treeDocFieldIdArray.length;i++){
		
      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print((treeDocFieldIdArray[i] ));
      out.write(_jsp_string10, 0, _jsp_string10.length);
      
		}
		
      out.write(_jsp_string11, 0, _jsp_string11.length);
      out.print((SystemEnv.getHtmlLabelName(19324,user.getLanguage())));
      out.write(_jsp_string12, 0, _jsp_string12.length);
      out.print((SystemEnv.getHtmlLabelName(19323,user.getLanguage())));
      out.write(_jsp_string13, 0, _jsp_string13.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/browser/DocTreeDocFieldBrowserMulti.jsp"), 7175776220215169073L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/browser/MobileInit.jsp"), 1397717249655627205L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string7;
  private final static char []_jsp_string4;
  private final static char []_jsp_string12;
  private final static char []_jsp_string5;
  private final static char []_jsp_string0;
  private final static char []_jsp_string11;
  private final static char []_jsp_string9;
  private final static char []_jsp_string10;
  private final static char []_jsp_string8;
  private final static char []_jsp_string6;
  private final static char []_jsp_string2;
  private final static char []_jsp_string1;
  private final static char []_jsp_string13;
  private final static char []_jsp_string3;
  static {
    _jsp_string7 = "</BUTTON>\r\n								        </td>\r\n								        </tr>                                  \r\n                                </TABLE>\r\n                            </FORM>\r\n                         </td>\r\n                    </tr>\r\n                </TABLE>\r\n            </td>\r\n            <td></td>\r\n        </tr>\r\n       \r\n    </table>\r\n</BODY>\r\n\r\n\r\n\r\n<script type=\"text/javascript\">\r\n\r\n	\r\n	//<!--\r\n	var cxtree_id = \"\";\r\n	var selectallflag = false;\r\n	/**\r\n	 * \u83b7\u53d6url\uff08alax\u65b9\u5f0f\u83b7\u5f97\u5b50\u8282\u70b9\u65f6\u4f7f\u7528\uff09\r\n	 */\r\n	function getAsyncUrl(treeId, treeNode) {\r\n		//\u83b7\u53d6\u5b50\u8282\u70b9\u65f6\r\n	    if (treeNode != undefined && treeNode.isParent != undefined && treeNode.isParent != null) {\r\n	    	return \"/mobile/plugin/browser/DocTreeDocFieldBrowserMultiXML.jsp?\" + treeNode.ajaxParam + \"&\" + new Date().getTime() + \"=\" + new Date().getTime();\r\n	    } else {\r\n	    	//\u521d\u59cb\u5316\u65f6\r\n	    	return \"/mobile/plugin/browser/DocTreeDocFieldBrowserMultiXML.jsp?needPeop=".toCharArray();
    _jsp_string4 = "\r\n\r\n\r\n<BODY onload=\"\" scroll=\"no\" style=\"overflow-y: hidden;padding: 0px;margin: 0px;\">\r\n    <table width=100% height=100% border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\r\n        <colgroup>\r\n        <col width=\"10\">\r\n        <col width=\"\">\r\n        <col width=\"10\">\r\n        <tr style=\"height: 430px;\">\r\n            <td ></td>\r\n            <td valign=\"top\">\r\n                <TABLE class=Shadow style=\"width: 100%\">\r\n                    <tr>\r\n                        <td  valign=\"top\">\r\n                            <FORM NAME=select STYLE=\"margin-bottom:0\" action=\"DocReceiveUnitBrowserMulti.jsp\" method=post>\r\n\r\n      \r\n                                <TABLE  ID=BrowseTable class=\"BroswerStyle\"  cellspacing=\"1\" STYLE=\"margin-top:0\" width=\"100%\">     \r\n                                     <TR class=Line1><TH colspan=\"4\" ></TH></TR>\r\n                                      <TR  >\r\n									  <input type=\"hidden\" name=\"selObj\">\r\n                                          <TD height=420 colspan=\"4\" width=\"100%\">                                            \r\n												<div id=\"deeptree\" style=\"height:100%;width:100%;overflow:scroll;\">\r\n	                                            	<ul id=\"ztreedeep\" class=\"ztree\"></ul>\r\n	                                            </div>\r\n                                          </TD>\r\n                                      </TR>  \r\n                                       <tr> <td height=\"25\" colspan=\"3\"></td></tr>\r\n								        <tr>\r\n								        <td align=\"center\" valign=\"bottom\" colspan=3>  \r\n									<BUTTON type='button' class=btn accessKey=O  id=btnok onclick=\"onSave()\"><U>O</U>-".toCharArray();
    _jsp_string12 = "';\r\n	    } else{\r\n	    	a = $(obj).html().substring(0,i+1)+' ".toCharArray();
    _jsp_string5 = "</BUTTON>\r\n									<BUTTON type='button' class=btn accessKey=2  id=btnclear onclick=\"onClear()\"><U>2</U>-".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n \r\n".toCharArray();
    _jsp_string11 = "\r\n	}\r\n	\r\n	function onSaveJavaScript(){\r\n	    var nameStr=\"\";\r\n	    var idStr = \"\";\r\n	    var treeObj = $.fn.zTree.getZTreeObj(\"ztreedeep\");\r\n		var nodes = treeObj.getCheckedNodes(true);\r\n		\r\n		if (nodes == undefined || nodes == \"\" || nodes.length < 1) {\r\n			return \"\";\r\n		}\r\n		\r\n		for (var i=0; i<nodes.length; i++) {\r\n			nameStr += \",\" + nodes[i].value;\r\n			idStr += \",\" + nodes[i].name;\r\n		}\r\n		\r\n		resultStr = nameStr + \"$\" + idStr;\r\n	    return resultStr;\r\n	}\r\n	\r\n	function onSave() {\r\n    	var  trunStr = \"\", returnVBArray = null;\r\n	    trunStr =  onSaveJavaScript();\r\n	    if(trunStr != \"\") {\r\n			returnVBArray = trunStr.split(\"$\");\r\n			var returnjson = {id:returnVBArray[0], name:returnVBArray[1]};\r\n	        window.parent.returnValue  = returnjson;\r\n	        window.parent.close();\r\n	    } else {\r\n	        window.parent.close();     \r\n		}\r\n    }\r\n    \r\n    function onClear() {\r\n	    window.parent.returnValue = {id:\"\", name:\"\"};\r\n	    window.parent.close();\r\n	}\r\n	\r\n	function needSelectAll(flag, obj){\r\n		selectallflag = flag;\r\n	   \r\n	   	var treeObj = $.fn.zTree.getZTreeObj(\"ztreedeep\");\r\n	   	var type = { \"Y\":\"\", \"N\": \"\"};\r\n	   	if(selectallflag){\r\n	   		type = { \"Y\":\"s\", \"N\": \"s\"};\r\n	   	}\r\n	   	treeObj.setting.check.chkboxType = type;\r\n	   	var i = $(obj).html().indexOf('>');\r\n	   	if(selectallflag){\r\n	        a = $(obj).html().substring(0,i+1)+' ".toCharArray();
    _jsp_string9 = "\r\n			node = treeObj.getNodeByParam(\"id\", \"field_".toCharArray();
    _jsp_string10 = "\", null);\r\n		    if (node != undefined && node != null ) {\r\n		    	treeObj.selectNode(node);\r\n		    	treeObj.checkNode(node, true, true);\r\n		    }\r\n		".toCharArray();
    _jsp_string8 = "\" + \"&\" + new Date().getTime() + \"=\" + new Date().getTime();\r\n	    }\r\n	};\r\n	//zTree\u914d\u7f6e\u4fe1\u606f\r\n	var setting = {\r\n		async: {\r\n			enable: true,       //\u542f\u7528\u5f02\u6b65\u52a0\u8f7d\r\n			type:\"get\",\r\n			dataType: \"text\",   //ajax\u6570\u636e\u7c7b\u578b\r\n			url: getAsyncUrl    //ajax\u7684url\r\n		},\r\n		check: {\r\n			enable: true,       //\u542f\u7528checkbox\u6216\u8005radio\r\n			chkStyle: \"checkbox\",  //check\u7c7b\u578b\u4e3acheckbox\r\n			chkboxType: { \"Y\" : \"\", \"N\" : \"\" } \r\n		},\r\n		view: {\r\n			expandSpeed: \"\"     //\u6548\u679c\r\n		},\r\n		callback: {\r\n			onClick: zTreeOnClick,   //\u8282\u70b9\u70b9\u51fb\u4e8b\u4ef6\r\n			onCheck: zTreeOnCheck,\r\n			onAsyncSuccess: zTreeOnAsyncSuccess  //ajax\u6210\u529f\u4e8b\u4ef6\r\n		}\r\n	};\r\n\r\n	var zNodes =[\r\n	];\r\n	\r\n	$(document).ready(function(){\r\n		//\u521d\u59cb\u5316zTree\r\n		$.fn.zTree.init($(\"#ztreedeep\"), setting, zNodes);\r\n	});\r\n	\r\n	function zTreeOnClick(event, treeId, treeNode) {\r\n	    var treeObj = $.fn.zTree.getZTreeObj(treeId);\r\n	    if (treeNode.isParent) {\r\n			treeObj.expandNode(treeNode);\r\n		}\r\n	};\r\n\r\n	function zTreeOnAsyncSuccess(event, treeId, treeNode, msg) {\r\n		//window.console.log(msg);\r\n	    var treeObj = $.fn.zTree.getZTreeObj(treeId);\r\n\r\n        var rootnodes = treeObj.getNodesByParamFuzzy(\"icon\", \"global16\", null);\r\n        setIsExistsCheckbox(treeObj, rootnodes, true);\r\n\r\n	    if (selectallflag) {\r\n	    	 if (treeNode != undefined && treeNode != null) {\r\n	 		    if (treeNode.checked) {\r\n	 			    var childrenNodes = treeNode.childs;\r\n	 		    	for (var i=0; i<childrenNodes.length; i++) {\r\n	 		    		treeObj.checkNode(childrenNodes[i], true, false);\r\n	 				}\r\n	 		    }\r\n	 	    }\r\n	    }\r\n	    \r\n	    var node = null;\r\n	    ".toCharArray();
    _jsp_string6 = "</BUTTON>\r\n								        <BUTTON type='button' class=btnReset accessKey=T  id=btncancel onclick=\"window.parent.close()\"><U>T</U>-".toCharArray();
    _jsp_string2 = "\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string13 = "';\r\n	    }\r\n		$(obj).html(a);\r\n	}\r\n	\r\n	function zTreeOnCheck(event, treeId, treeNode) {\r\n		var treeObj = $.fn.zTree.getZTreeObj(treeId);\r\n\r\n		var nodes = treeNode.childs;\r\n		\r\n		if (nodes == null || nodes == undefined) {\r\n			treeObj.reAsyncChildNodes(treeNode, \"refresh\");\r\n		} else {\r\n			if (selectallflag && treeNode.checked) {\r\n		    	for (var i=0; i<nodes.length; i++) {\r\n			    	if (nodes[i].checked) {\r\n			    		treeObj.checkNode(nodes[i], false, false);	\r\n			    	}\r\n			    	treeObj.checkNode(nodes[i], true, false);\r\n				}\r\n			}\r\n		}\r\n	}\r\n	\r\n	function check() {}\r\n	\r\n	/**\r\n	 * \u8bbe\u7f6e\u67d0\u4e9b\u8282\u70b9\u96c6\u5408\u662f\u5426\u663e\u793acheckbox\r\n	 */\r\n	function setIsExistsCheckbox(treeObj, nodes, flag) {\r\n		if (nodes != undefined && nodes != null) {\r\n			for (var i=0; i<nodes.length; i++) {\r\n				if (nodes[i].nocheck == flag) {\r\n					continue;\r\n				}\r\n				\r\n				nodes[i].nocheck = flag;\r\n				treeObj.updateNode(nodes[i]);\r\n			}\r\n		}\r\n	}\r\n	\r\n	//-->\r\n</SCRIPT>\r\n</HTML>".toCharArray();
    _jsp_string3 = "\r\n<HTML>\r\n<HEAD>\r\n     <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n	<link href=\"/mobile/plugin/browser/css/Weaver_wev8.css\" rel=\"stylesheet\" type=\"text/css\" >\r\n    <script type=\"text/javascript\" src=\"/mobile/plugin/browser/js/zTree/js/jquery-1.4.4.min_wev8.js\"></script>\r\n	<link rel=\"stylesheet\" href=\"/mobile/plugin/browser/js/zTree/css/zTreeStyle/zTreeStyle_wev8.css\" type=\"text/css\">\r\n	<script type=\"text/javascript\" src=\"/mobile/plugin/browser/js/zTree/js/jquery.ztree.core.min_wev8.js\"></script>\r\n	<script type=\"text/javascript\" src=\"/mobile/plugin/browser/js/zTree/js/jquery.ztree.excheck.min_wev8.js\"></script>\r\n    \r\n</HEAD>\r\n\r\n".toCharArray();
  }
}
