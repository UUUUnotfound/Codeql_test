/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp._mobile._plugin._browser;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.util.*;
import weaver.general.*;

public class _mobilecrossframeproxy__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/plain; charset=UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
String method = Util.null2String(request.getParameter("method"));
String flag = Util.null2String(request.getParameter("flag"));

StaticObj staticobj = StaticObj.getInstance();

Map data = (Map) (staticobj.getRecordFromObj("cn.com.weaver.mobile.config.proxy", flag));
if(data==null) data = new HashMap();

if(method==null||"".equals(method)) return;
if(flag==null||"".equals(flag)) return;

if("returnAddUser".equals(method)) {
	String sharetype = Util.null2String(request.getParameter("sharetype"));
	String seclevel = Util.null2String(request.getParameter("seclevel"));
	String rolelevel = Util.null2String(request.getParameter("rolelevel"));
	String relatedshareids = Util.null2String(request.getParameter("relatedshareids"));
	String click = Util.null2String(request.getParameter("click"));
	
	String callback = Util.null2String(request.getParameter("callback"));
	
	data.put("sharetype",sharetype);
	data.put("seclevel",seclevel);
	data.put("rolelevel",rolelevel);
	data.put("relatedshareids",relatedshareids);
	data.put("click",click);
	
	staticobj.putRecordToObj("cn.com.weaver.mobile.config.proxy", flag, data);
	
	out.println(callback+";");
	
} else if("getAddUser".equals(method)) {
	String callback = "";
	if(data.size()>0) {
		String sharetype = Util.null2String((String)data.get("sharetype"));
		String seclevel = Util.null2String((String)data.get("seclevel"));
		String rolelevel = Util.null2String((String)data.get("rolelevel"));
		String relatedshareids = Util.null2String((String)data.get("relatedshareids"));
		String click = Util.null2String((String)data.get("click"));
		
		callback = "cancel()";
		if(click!=null&&"ok".equals(click)) callback = "ok()";
		
		out.println("document.getElementById(\"returnsharetype\").value=\""+sharetype+"\";");
		out.println("document.getElementById(\"returnseclevel\").value=\""+seclevel+"\";");
		out.println("document.getElementById(\"returnrolelevel\").value=\""+rolelevel+"\";");
		out.println("document.getElementById(\"returnrelatedshareids\").value=\""+relatedshareids+"\";");
	} else {
		callback = "checkProxy()";
	}
	out.println(callback+";");
	
} else if("clearAddUser".equals(method)) {
	
	String callback = Util.null2String(request.getParameter("callback"));
	
	staticobj.removeRecordFromObj("cn.com.weaver.mobile.config.proxy", flag);
	
	out.println(callback+";");

} else if("returnAddConfig".equals(method)) {
	String returnvalueinput = Util.null2String(request.getParameter("returnvalueinput"));
	String returnvalue = Util.null2String(request.getParameter("returnvalue"));
	String click = Util.null2String(request.getParameter("click"));
	
	String callback = Util.null2String(request.getParameter("callback"));
	
	data.put("returnvalueinput",returnvalueinput);
	data.put("returnvalue",returnvalue);
	data.put("click",click);
	
	staticobj.putRecordToObj("cn.com.weaver.mobile.config.proxy", flag, data);
	
	out.println(callback+";");
		
} else if("getAddConfig".equals(method)) {
	String callback = "";
	if(data.size()>0) {
		String returnvalueinput = Util.null2String((String)data.get("returnvalueinput"));
		String returnvalue = Util.null2String((String)data.get("returnvalue"));
		String click = Util.null2String((String)data.get("click"));
		
		callback = "clearProxy()";
		
		if(click!=null&&"ok".equals(click))
			out.println("document.getElementById(\""+returnvalueinput+"\").value=\""+returnvalue+"\";");
	} else {
		callback = "checkProxy()";
	}
	out.println(callback+";");
	
} else if("clearAddConfig".equals(method)) {
	
	String callback = Util.null2String(request.getParameter("callback"));
	
	staticobj.removeRecordFromObj("cn.com.weaver.mobile.config.proxy", flag);
	
	out.println(callback+";");
		
}

    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("mobile/plugin/browser/MobileCrossFrameProxy.jsp"), 1259518784826837776L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "\r\n\r\n\r\n".toCharArray();
  }
}
